{"version":3,"file":"js/423.a2ab0d9f.js","mappings":"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","sources":["webpack://vuetools/./src/views/leaflet/leaflet.vue","webpack://vuetools/./src/utils/debounceModule.js","webpack://vuetools/src/views/leaflet/leaflet.vue","webpack://vuetools/./src/views/leaflet/leaflet.vue?b033","webpack://vuetools/./src/views/leaflet/leaflet.vue?bd8e","webpack://vuetools/./node_modules/proj4/lib/global.js","webpack://vuetools/./node_modules/proj4/lib/constants/values.js","webpack://vuetools/./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack://vuetools/./node_modules/proj4/lib/constants/units.js","webpack://vuetools/./node_modules/proj4/lib/match.js","webpack://vuetools/./node_modules/proj4/lib/projString.js","webpack://vuetools/./node_modules/wkt-parser/parser.js","webpack://vuetools/./node_modules/wkt-parser/process.js","webpack://vuetools/./node_modules/wkt-parser/index.js","webpack://vuetools/./node_modules/proj4/lib/defs.js","webpack://vuetools/./node_modules/proj4/lib/parseCode.js","webpack://vuetools/./node_modules/proj4/lib/extend.js","webpack://vuetools/./node_modules/proj4/lib/common/msfnz.js","webpack://vuetools/./node_modules/proj4/lib/common/sign.js","webpack://vuetools/./node_modules/proj4/lib/common/adjust_lon.js","webpack://vuetools/./node_modules/proj4/lib/common/tsfnz.js","webpack://vuetools/./node_modules/proj4/lib/common/phi2z.js","webpack://vuetools/./node_modules/proj4/lib/projections/merc.js","webpack://vuetools/./node_modules/proj4/lib/projections/longlat.js","webpack://vuetools/./node_modules/proj4/lib/projections.js","webpack://vuetools/./node_modules/proj4/lib/constants/Ellipsoid.js","webpack://vuetools/./node_modules/proj4/lib/deriveConstants.js","webpack://vuetools/./node_modules/proj4/lib/constants/Datum.js","webpack://vuetools/./node_modules/proj4/lib/datum.js","webpack://vuetools/./node_modules/proj4/lib/nadgrid.js","webpack://vuetools/./node_modules/proj4/lib/Proj.js","webpack://vuetools/./node_modules/proj4/lib/datumUtils.js","webpack://vuetools/./node_modules/proj4/lib/datum_transform.js","webpack://vuetools/./node_modules/proj4/lib/adjust_axis.js","webpack://vuetools/./node_modules/proj4/lib/common/toPoint.js","webpack://vuetools/./node_modules/proj4/lib/checkSanity.js","webpack://vuetools/./node_modules/proj4/lib/transform.js","webpack://vuetools/./node_modules/proj4/lib/core.js","webpack://vuetools/./node_modules/mgrs/mgrs.js","webpack://vuetools/./node_modules/proj4/lib/Point.js","webpack://vuetools/./node_modules/proj4/lib/common/pj_enfn.js","webpack://vuetools/./node_modules/proj4/lib/common/pj_mlfn.js","webpack://vuetools/./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack://vuetools/./node_modules/proj4/lib/projections/tmerc.js","webpack://vuetools/./node_modules/proj4/lib/common/sinh.js","webpack://vuetools/./node_modules/proj4/lib/common/hypot.js","webpack://vuetools/./node_modules/proj4/lib/common/log1py.js","webpack://vuetools/./node_modules/proj4/lib/common/asinhy.js","webpack://vuetools/./node_modules/proj4/lib/common/gatg.js","webpack://vuetools/./node_modules/proj4/lib/common/clens.js","webpack://vuetools/./node_modules/proj4/lib/common/cosh.js","webpack://vuetools/./node_modules/proj4/lib/common/clens_cmplx.js","webpack://vuetools/./node_modules/proj4/lib/projections/etmerc.js","webpack://vuetools/./node_modules/proj4/lib/common/adjust_zone.js","webpack://vuetools/./node_modules/proj4/lib/projections/utm.js","webpack://vuetools/./node_modules/proj4/lib/common/srat.js","webpack://vuetools/./node_modules/proj4/lib/projections/gauss.js","webpack://vuetools/./node_modules/proj4/lib/projections/sterea.js","webpack://vuetools/./node_modules/proj4/lib/projections/stere.js","webpack://vuetools/./node_modules/proj4/lib/projections/somerc.js","webpack://vuetools/./node_modules/proj4/lib/projections/omerc.js","webpack://vuetools/./node_modules/proj4/lib/projections/lcc.js","webpack://vuetools/./node_modules/proj4/lib/projections/krovak.js","webpack://vuetools/./node_modules/proj4/lib/common/mlfn.js","webpack://vuetools/./node_modules/proj4/lib/common/e0fn.js","webpack://vuetools/./node_modules/proj4/lib/common/e1fn.js","webpack://vuetools/./node_modules/proj4/lib/common/e2fn.js","webpack://vuetools/./node_modules/proj4/lib/common/e3fn.js","webpack://vuetools/./node_modules/proj4/lib/common/gN.js","webpack://vuetools/./node_modules/proj4/lib/common/adjust_lat.js","webpack://vuetools/./node_modules/proj4/lib/common/imlfn.js","webpack://vuetools/./node_modules/proj4/lib/projections/cass.js","webpack://vuetools/./node_modules/proj4/lib/common/qsfnz.js","webpack://vuetools/./node_modules/proj4/lib/projections/laea.js","webpack://vuetools/./node_modules/proj4/lib/common/asinz.js","webpack://vuetools/./node_modules/proj4/lib/projections/aea.js","webpack://vuetools/./node_modules/proj4/lib/projections/gnom.js","webpack://vuetools/./node_modules/proj4/lib/common/iqsfnz.js","webpack://vuetools/./node_modules/proj4/lib/projections/cea.js","webpack://vuetools/./node_modules/proj4/lib/projections/eqc.js","webpack://vuetools/./node_modules/proj4/lib/projections/poly.js","webpack://vuetools/./node_modules/proj4/lib/projections/nzmg.js","webpack://vuetools/./node_modules/proj4/lib/projections/mill.js","webpack://vuetools/./node_modules/proj4/lib/projections/sinu.js","webpack://vuetools/./node_modules/proj4/lib/projections/moll.js","webpack://vuetools/./node_modules/proj4/lib/projections/eqdc.js","webpack://vuetools/./node_modules/proj4/lib/projections/vandg.js","webpack://vuetools/./node_modules/proj4/lib/projections/aeqd.js","webpack://vuetools/./node_modules/proj4/lib/projections/ortho.js","webpack://vuetools/./node_modules/proj4/lib/projections/qsc.js","webpack://vuetools/./node_modules/proj4/lib/projections/robin.js","webpack://vuetools/./node_modules/proj4/lib/projections/geocent.js","webpack://vuetools/./node_modules/proj4/lib/projections/tpers.js","webpack://vuetools/./node_modules/proj4/lib/projections/geos.js","webpack://vuetools/./node_modules/proj4/projs.js","webpack://vuetools/./node_modules/proj4/lib/index.js","webpack://vuetools/./node_modules/proj4leaflet/src/proj4leaflet.js","webpack://vuetools/./src/utils/leafletMap/tileLayer.baidu.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"left-let-page\"},[_c('div',{staticClass:\"search-box\"},[_c('el-input',{attrs:{\"clearable\":\"\",\"prefix-icon\":\"el-icon-search\"},on:{\"input\":_vm.onInput,\"clear\":_vm.onClear},model:{value:(_vm.searchText),callback:function ($$v) {_vm.searchText=$$v},expression:\"searchText\"}})],1),(_vm.restaurants.length > 0)?_c('div',{staticClass:\"search-res\"},_vm._l((_vm.restaurants),function(item){return _c('div',{key:item.uid},[_c('div',{staticClass:\"search-res-item\",on:{\"click\":function($event){return _vm.choosePlace(item)}}},[_vm._v(\" \"+_vm._s(item.name)+\" \")])])}),0):_vm._e(),_c('div',{attrs:{\"id\":\"map\"}})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * @Event 方法\n * @description: 防抖节流的简单封装\n * */\n\n// 节流\nexport function throttleFun(fn, wait = 500) {\n  let last, now;\n  return function () {\n    now = Date.now();\n    if (last && now - last < wait) {\n      last = now;\n    } else {\n      last = now;\n      fn.call(this, ...arguments);\n    }\n  };\n}\n\n// 防抖\nexport function debounceFun(fn, wait = 500) {\n  let timer;\n  return function () {\n    let context = this;\n    let args = arguments;\n    if (timer) clearTimeout(timer);\n    timer = setTimeout(() => {\n      fn.apply(context, args);\n    }, wait);\n  };\n}\n","<template>\n  <div class=\"left-let-page\">\n    <div class=\"search-box\">\n      <el-input\n        v-model=\"searchText\"\n        clearable\n        prefix-icon=\"el-icon-search\"\n        @input=\"onInput\"\n        @clear=\"onClear\"\n      />\n    </div>\n    <div v-if=\"restaurants.length > 0\" class=\"search-res\">\n      <div v-for=\"item in restaurants\" :key=\"item.uid\">\n        <div @click=\"choosePlace(item)\" class=\"search-res-item\">\n          {{ item.name }}\n        </div>\n      </div>\n    </div>\n    <div id=\"map\"></div>\n  </div>\n</template>\n<script>\nimport \"@/utils/leafletMap/tileLayer.baidu.js\";\nimport { debounceFun } from \"@/utils/debounceModule\";\n\nexport default {\n  data() {\n    return {\n      map: null,\n      searchText: null,\n      timeout: null,\n      restaurants: [],\n      marker: null,\n      mapIcon: require(\"@/assets/img/mapIcon/marker.png\"),\n    };\n  },\n\n  methods: {\n    /**\n     * @Event 方法\n     * @description: 初始化地图\n     * */\n    initMap() {\n      this.map = L.map(\"map\", {\n        minZoom: 3,\n        maxZoom: 18,\n        // center: [39.56, 116.20],\n        center: [30.56, 120.2],\n        zoom: 8,\n        zoomControl: true, // 縮放按钮\n        attributionControl: false, // leaflet map logo\n        crs: L.CRS.Baidu,\n      });\n      L.tileLayer.baidu({ layer: \"img2\" }).addTo(this.map);\n      this.map.on(\"click\", this.setMapClick);\n    },\n\n    /**\n     * @Event 方法\n     * @description: 地图点击事件\n     * */\n    setMapClick(e) {\n      var location = {\n        name: \"\",\n        location: e.latlng,\n      };\n      // this.setMarker(location)\n      console.log(e, \"e\");\n    },\n\n    /**\n     * @Event 方法\n     * @description: 输入框搜索事件 防抖\n     * */\n    onInput: debounceFun(function () {\n      let ak = \"bOF9gGWXz76q065otbYtWN4A\";\n      // let url = 'https://api.map.baidu.com/place/v2/suggestion?query=%E6%9D%AD%E5%B7%9E&region=%E4%B8%AD%E5%9B%BD&city_limit=false&output=json&ak=lsV6XoYeHVAK0ditM4yBlatCbcIhGD6t'\n      let url = `/place/v2/suggestion?query=${this.searchText}&region=中国&city_limit=false&output=json&ak=${ak}`;\n      this.$axios.get(url).then((res) => {\n        this.restaurants = res.data.result;\n      });\n    }, 800),\n\n    onClear() {\n      this.restaurants = [];\n    },\n\n    /**\n     * @Event 方法\n     * @description: 搜索结果点击\n     * */\n    choosePlace(item) {\n      this.restaurants = [];\n      this.setMarker(item);\n    },\n\n    setMarker(item) {\n      if (this.marker) {\n        this.map.removeLayer(this.marker);\n      }\n      var markerIcon;\n      if (item.name) {\n        markerIcon = L.divIcon({\n          className: \"markerBox\",\n          html:\n            `<div class=\"mapIcon\"><img src=\"${this.mapIcon}\" /><span class=\"markerTips\">` +\n            item.name +\n            \"</span></div>\",\n          iconSize: [32, 32], // marker宽高\n          iconAnchor: [28.5, 55], // 文字标注相对位置\n        });\n      } else {\n        markerIcon = L.divIcon({\n          className: \"markerBox\",\n          html: `<div class=\"mapIcon\"><img rc=\"${this.mapIcon}\" /><span class=\"markerTips\">未命名定点</span></div>`,\n          iconSize: [32, 32], // marker宽高\n          iconAnchor: [28.5, 55], // 文字标注相对位置\n        });\n      }\n\n      const center = L.latLng(item.location.lat, item.location.lng);\n      this.map.setView(center);\n      this.marker = new L.Marker([item.location.lat, item.location.lng], {\n        icon: markerIcon,\n      });\n      this.map.addLayer(this.marker);\n    },\n  },\n\n  mounted() {\n    this.initMap();\n  },\n};\n</script>\n<style scoped lang=\"scss\">\n.left-let-page {\n  .search-box {\n    width: 400px;\n    height: 40px;\n    position: absolute;\n    top: 10px;\n    left: 50px;\n    z-index: 99999 !important;\n  }\n\n  .search-res {\n    width: 398px;\n    max-height: 80vh;\n    overflow-y: auto;\n    position: absolute;\n    top: 50px;\n    left: 50px;\n    z-index: 99999 !important;\n\n    &-item {\n      color: #606266;\n      padding: 10px 0 10px 10px;\n      background-color: #fff;\n      border-bottom: 1px solid #eeeeee;\n\n      &:hover {\n        cursor: pointer;\n        background-color: #1492ff;\n        color: #fff;\n      }\n    }\n  }\n\n  #map {\n    width: 100vw;\n    height: 100vh;\n    margin: auto;\n  }\n}\n</style>\n\n<style lang=\"scss\">\n.markerBox {\n  border: none;\n  width: auto;\n  height: auto;\n}\n.mapIcon {\n  border: none;\n  background: none;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  img {\n    width: 40px !important;\n    height: 40px !important;\n  }\n}\n.markerTips {\n  margin-top: 2px;\n  padding: 2.5px 5px;\n  background: #ffff;\n  border-radius: 5px;\n  white-space: nowrap;\n  box-shadow: 0px 2px 4px 0px #cdced1;\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./leaflet.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./leaflet.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./leaflet.vue?vue&type=template&id=b8a48dd0&scoped=true&\"\nimport script from \"./leaflet.vue?vue&type=script&lang=js&\"\nexport * from \"./leaflet.vue?vue&type=script&lang=js&\"\nimport style0 from \"./leaflet.vue?vue&type=style&index=0&id=b8a48dd0&prod&scoped=true&lang=scss&\"\nimport style1 from \"./leaflet.vue?vue&type=style&index=1&id=b8a48dd0&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"b8a48dd0\",\n  null\n  \n)\n\nexport default component.exports","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function() {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  } else if (!wkt.lat_ts && wkt.lat0 && wkt.projName === 'Polar_Stereographic') {\n    wkt.lat_ts = wkt.lat0;\n    wkt.lat0 = d2r(wkt.lat0 > 0 ? 90 : -90);\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk80ign = {\n  a: 6378249.2,\n  b: 6356515,\n  rf: 293.4660213,\n  ellipseName: \"Clarke 1880 (IGN)\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n","import {PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  if (header.nSubgrids > 1) {\n    console.log('Only single NTv2 subgrids are currently supported, subsequent sub grids are ignored');\n  }\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {header: header, subgrids: subgrids};\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) { return null; }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n  }\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n    };\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport {getNadgrids} from \"./nadgrid\";\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = {x: -point.x, y: point.y};\n  var output = {x: Number.NaN, y: Number.NaN};\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    onlyMandatoryGrids = grid.mandatory;\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n      continue;\n    }\n    var subgrid = grid.grid.subgrids[0];\n    // skip tables that don't match our point at all\n    var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n    var minX = subgrid.ll[0] - epsilon;\n    var minY = subgrid.ll[1] - epsilon;\n    var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n    var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n    if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n      continue;\n    }\n    output = applySubgridShift(input, inverse, subgrid);\n    if (!isNaN(output.x)) {\n      break;\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\"+\n      -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {x: Number.NaN, y: Number.NaN};\n  if (isNaN(pin.x)) { return val; }\n  var tb = {x: pin.x, y: pin.y};\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n  var val= {x: Number.NaN, y: Number.NaN};\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx++;\n  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx += ct.lim[0];\n  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx--;\n  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return (\n    (source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM || source.datum.datum_type === PJD_GRIDSHIFT) && dest.datumCode !== 'WGS84') ||\n    ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM || dest.datum.datum_type === PJD_GRIDSHIFT) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  } else {\n    // Clone the point object so inputs don't get modified\n    point = {\n      x: point.x,\n      y: point.y,\n      z: point.z,\n      m: point.m\n    };\n  }\n  var hasZ = point.z !== undefined;\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  if (!hasZ) {\n    delete point.z;\n  }\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.splice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.splice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.splice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n  \n  //double lat0;                    /* the reference latitude               */\n  //double long0;                   /* the reference longitude              */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n  \n  //the above value can be set with proj4.defs\n  //example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  \"Lambert Tangential Conformal Conic Projection\",\n  \"Lambert_Conformal_Conic\",\n  \"Lambert_Conformal_Conic_1SP\",\n  \"Lambert_Conformal_Conic_2SP\",\n  \"lcc\",\n  \"Lambert Conic Conformal (1SP)\",\n  \"Lambert Conic Conformal (2SP)\"\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};","\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import hypot from '../common/hypot';\n\nexport function init() {\n    this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n    this.h = Number(this.h);\n    this.radius_g_1 = this.h / this.a;\n\n    if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n        throw new Error();\n    }\n\n    this.radius_g = 1.0 + this.radius_g_1;\n    this.C = this.radius_g * this.radius_g - 1.0;\n\n    if (this.es !== 0.0) {\n        var one_es = 1.0 - this.es;\n        var rone_es = 1 / one_es;\n\n        this.radius_p = Math.sqrt(one_es);\n        this.radius_p2 = one_es;\n        this.radius_p_inv2 = rone_es;\n\n        this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n    } else {\n        this.radius_p = 1.0;\n        this.radius_p2 = 1.0;\n        this.radius_p_inv2 = 1.0;\n\n        this.shape = 'sphere';  // Use as a condition in the forward and inverse functions.\n    }\n\n    if (!this.title) {\n        this.title = \"Geostationary Satellite View\";\n    }\n}\n\nfunction forward(p) {\n    var lon = p.x;\n    var lat = p.y;\n    var tmp, v_x, v_y, v_z;\n    lon = lon - this.long0;\n\n    if (this.shape === 'ellipse') {\n        lat = Math.atan(this.radius_p2 * Math.tan(lat));\n        var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n        v_x = r * Math.cos(lon) * Math.cos(lat);\n        v_y = r * Math.sin(lon) * Math.cos(lat);\n        v_z = r * Math.sin(lat);\n\n        if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        tmp = this.radius_g - v_x;\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    } else if (this.shape === 'sphere') {\n        tmp = Math.cos(lat);\n        v_x = Math.cos(lon) * tmp;\n        v_y = Math.sin(lon) * tmp;\n        v_z = Math.sin(lat);\n        tmp = this.radius_g - v_x;\n\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    }\n    p.x = p.x * this.a;\n    p.y = p.y * this.a;\n    return p;\n}\n\nfunction inverse(p) {\n    var v_x = -1.0;\n    var v_y = 0.0;\n    var v_z = 0.0;\n    var a, b, det, k;\n\n    p.x = p.x / this.a;\n    p.y = p.y / this.a;\n\n    if (this.shape === 'ellipse') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n        }\n\n        var v_zp = v_z / this.radius_p;\n        a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n        p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n    } else if (this.shape === 'sphere') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n        }\n\n        a = v_y * v_y + v_z * v_z + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    }\n    p.x = p.x + this.long0;\n    return p;\n}\n\nexport var names = [\"Geostationary Satellite View\", \"Geostationary_Satellite\", \"geos\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names,\n};\n\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n}","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n","(function (factory) {\r\n\tvar L, proj4;\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\t// AMD\r\n\t\tdefine(['leaflet', 'proj4'], factory);\r\n\t} else if (typeof module === 'object' && typeof module.exports === \"object\") {\r\n\t\t// Node/CommonJS\r\n\t\tL = require('leaflet');\r\n\t\tproj4 = require('proj4');\r\n\t\tmodule.exports = factory(L, proj4);\r\n\t} else {\r\n\t\t// Browser globals\r\n\t\tif (typeof window.L === 'undefined' || typeof window.proj4 === 'undefined')\r\n\t\t\tthrow 'Leaflet and proj4 must be loaded first';\r\n\t\tfactory(window.L, window.proj4);\r\n\t}\r\n}(function (L, proj4) {\r\n\tif (proj4.__esModule && proj4.default) {\r\n\t\t// If proj4 was bundled as an ES6 module, unwrap it to get\r\n\t\t// to the actual main proj4 object.\r\n\t\t// See discussion in https://github.com/kartena/Proj4Leaflet/pull/147\r\n\t\tproj4 = proj4.default;\r\n\t}\r\n \r\n\tL.Proj = {};\r\n\r\n\tL.Proj._isProj4Obj = function(a) {\r\n\t\treturn (typeof a.inverse !== 'undefined' &&\r\n\t\t\ttypeof a.forward !== 'undefined');\r\n\t};\r\n\r\n\tL.Proj.Projection = L.Class.extend({\r\n\t\tinitialize: function(code, def, bounds) {\r\n\t\t\tvar isP4 = L.Proj._isProj4Obj(code);\r\n\t\t\tthis._proj = isP4 ? code : this._projFromCodeDef(code, def);\r\n\t\t\tthis.bounds = isP4 ? def : bounds;\r\n\t\t},\r\n\r\n\t\tproject: function (latlng) {\r\n\t\t\tvar point = this._proj.forward([latlng.lng, latlng.lat]);\r\n\t\t\treturn new L.Point(point[0], point[1]);\r\n\t\t},\r\n\r\n\t\tunproject: function (point, unbounded) {\r\n\t\t\tvar point2 = this._proj.inverse([point.x, point.y]);\r\n\t\t\treturn new L.LatLng(point2[1], point2[0], unbounded);\r\n\t\t},\r\n\r\n\t\t_projFromCodeDef: function(code, def) {\r\n\t\t\tif (def) {\r\n\t\t\t\tproj4.defs(code, def);\r\n\t\t\t} else if (proj4.defs[code] === undefined) {\r\n\t\t\t\tvar urn = code.split(':');\r\n\t\t\t\tif (urn.length > 3) {\r\n\t\t\t\t\tcode = urn[urn.length - 3] + ':' + urn[urn.length - 1];\r\n\t\t\t\t}\r\n\t\t\t\tif (proj4.defs[code] === undefined) {\r\n\t\t\t\t\tthrow 'No projection definition for code ' + code;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn proj4(code);\r\n\t\t}\r\n\t});\r\n\r\n\tL.Proj.CRS = L.Class.extend({\r\n\t\tincludes: L.CRS,\r\n\r\n\t\toptions: {\r\n\t\t\ttransformation: new L.Transformation(1, 0, -1, 0)\r\n\t\t},\r\n\r\n\t\tinitialize: function(a, b, c) {\r\n\t\t\tvar code,\r\n\t\t\t    proj,\r\n\t\t\t    def,\r\n\t\t\t    options;\r\n\r\n\t\t\tif (L.Proj._isProj4Obj(a)) {\r\n\t\t\t\tproj = a;\r\n\t\t\t\tcode = proj.srsCode;\r\n\t\t\t\toptions = b || {};\r\n\r\n\t\t\t\tthis.projection = new L.Proj.Projection(proj, options.bounds);\r\n\t\t\t} else {\r\n\t\t\t\tcode = a;\r\n\t\t\t\tdef = b;\r\n\t\t\t\toptions = c || {};\r\n\t\t\t\tthis.projection = new L.Proj.Projection(code, def, options.bounds);\r\n\t\t\t}\r\n\r\n\t\t\tL.Util.setOptions(this, options);\r\n\t\t\tthis.code = code;\r\n\t\t\tthis.transformation = this.options.transformation;\r\n\r\n\t\t\tif (this.options.origin) {\r\n\t\t\t\tthis.transformation =\r\n\t\t\t\t\tnew L.Transformation(1, -this.options.origin[0],\r\n\t\t\t\t\t\t-1, this.options.origin[1]);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.options.scales) {\r\n\t\t\t\tthis._scales = this.options.scales;\r\n\t\t\t} else if (this.options.resolutions) {\r\n\t\t\t\tthis._scales = [];\r\n\t\t\t\tfor (var i = this.options.resolutions.length - 1; i >= 0; i--) {\r\n\t\t\t\t\tif (this.options.resolutions[i]) {\r\n\t\t\t\t\t\tthis._scales[i] = 1 / this.options.resolutions[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.infinite = !this.options.bounds;\r\n\r\n\t\t},\r\n\r\n\t\tscale: function(zoom) {\r\n\t\t\tvar iZoom = Math.floor(zoom),\r\n\t\t\t\tbaseScale,\r\n\t\t\t\tnextScale,\r\n\t\t\t\tscaleDiff,\r\n\t\t\t\tzDiff;\r\n\t\t\tif (zoom === iZoom) {\r\n\t\t\t\treturn this._scales[zoom];\r\n\t\t\t} else {\r\n\t\t\t\t// Non-integer zoom, interpolate\r\n\t\t\t\tbaseScale = this._scales[iZoom];\r\n\t\t\t\tnextScale = this._scales[iZoom + 1];\r\n\t\t\t\tscaleDiff = nextScale - baseScale;\r\n\t\t\t\tzDiff = (zoom - iZoom);\r\n\t\t\t\treturn baseScale + scaleDiff * zDiff;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tzoom: function(scale) {\r\n\t\t\t// Find closest number in this._scales, down\r\n\t\t\tvar downScale = this._closestElement(this._scales, scale),\r\n\t\t\t\tdownZoom = this._scales.indexOf(downScale),\r\n\t\t\t\tnextScale,\r\n\t\t\t\tnextZoom,\r\n\t\t\t\tscaleDiff;\r\n\t\t\t// Check if scale is downScale => return array index\r\n\t\t\tif (scale === downScale) {\r\n\t\t\t\treturn downZoom;\r\n\t\t\t}\r\n\t\t\tif (downScale === undefined) {\r\n\t\t\t\treturn -Infinity;\r\n\t\t\t}\r\n\t\t\t// Interpolate\r\n\t\t\tnextZoom = downZoom + 1;\r\n\t\t\tnextScale = this._scales[nextZoom];\r\n\t\t\tif (nextScale === undefined) {\r\n\t\t\t\treturn Infinity;\r\n\t\t\t}\r\n\t\t\tscaleDiff = nextScale - downScale;\r\n\t\t\treturn (scale - downScale) / scaleDiff + downZoom;\r\n\t\t},\r\n\r\n\t\tdistance: L.CRS.Earth.distance,\r\n\r\n\t\tR: L.CRS.Earth.R,\r\n\r\n\t\t/* Get the closest lowest element in an array */\r\n\t\t_closestElement: function(array, element) {\r\n\t\t\tvar low;\r\n\t\t\tfor (var i = array.length; i--;) {\r\n\t\t\t\tif (array[i] <= element && (low === undefined || low < array[i])) {\r\n\t\t\t\t\tlow = array[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn low;\r\n\t\t}\r\n\t});\r\n\r\n\tL.Proj.GeoJSON = L.GeoJSON.extend({\r\n\t\tinitialize: function(geojson, options) {\r\n\t\t\tthis._callLevel = 0;\r\n\t\t\tL.GeoJSON.prototype.initialize.call(this, geojson, options);\r\n\t\t},\r\n\r\n\t\taddData: function(geojson) {\r\n\t\t\tvar crs;\r\n\r\n\t\t\tif (geojson) {\r\n\t\t\t\tif (geojson.crs && geojson.crs.type === 'name') {\r\n\t\t\t\t\tcrs = new L.Proj.CRS(geojson.crs.properties.name);\r\n\t\t\t\t} else if (geojson.crs && geojson.crs.type) {\r\n\t\t\t\t\tcrs = new L.Proj.CRS(geojson.crs.type + ':' + geojson.crs.properties.code);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (crs !== undefined) {\r\n\t\t\t\t\tthis.options.coordsToLatLng = function(coords) {\r\n\t\t\t\t\t\tvar point = L.point(coords[0], coords[1]);\r\n\t\t\t\t\t\treturn crs.projection.unproject(point);\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Base class' addData might call us recursively, but\r\n\t\t\t// CRS shouldn't be cleared in that case, since CRS applies\r\n\t\t\t// to the whole GeoJSON, inluding sub-features.\r\n\t\t\tthis._callLevel++;\r\n\t\t\ttry {\r\n\t\t\t\tL.GeoJSON.prototype.addData.call(this, geojson);\r\n\t\t\t} finally {\r\n\t\t\t\tthis._callLevel--;\r\n\t\t\t\tif (this._callLevel === 0) {\r\n\t\t\t\t\tdelete this.options.coordsToLatLng;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tL.Proj.geoJson = function(geojson, options) {\r\n\t\treturn new L.Proj.GeoJSON(geojson, options);\r\n\t};\r\n\r\n\tL.Proj.ImageOverlay = L.ImageOverlay.extend({\r\n\t\tinitialize: function (url, bounds, options) {\r\n\t\t\tL.ImageOverlay.prototype.initialize.call(this, url, null, options);\r\n\t\t\tthis._projectedBounds = bounds;\r\n\t\t},\r\n\r\n\t\t// Danger ahead: Overriding internal methods in Leaflet.\r\n\t\t// Decided to do this rather than making a copy of L.ImageOverlay\r\n\t\t// and doing very tiny modifications to it.\r\n\t\t// Future will tell if this was wise or not.\r\n\t\t_animateZoom: function (event) {\r\n\t\t\tvar scale = this._map.getZoomScale(event.zoom);\r\n\t\t\tvar northWest = L.point(this._projectedBounds.min.x, this._projectedBounds.max.y);\r\n\t\t\tvar offset = this._projectedToNewLayerPoint(northWest, event.zoom, event.center);\r\n\r\n\t\t\tL.DomUtil.setTransform(this._image, offset, scale);\r\n\t\t},\r\n\r\n\t\t_reset: function () {\r\n\t\t\tvar zoom = this._map.getZoom();\r\n\t\t\tvar pixelOrigin = this._map.getPixelOrigin();\r\n\t\t\tvar bounds = L.bounds(\r\n\t\t\t\tthis._transform(this._projectedBounds.min, zoom)._subtract(pixelOrigin),\r\n\t\t\t\tthis._transform(this._projectedBounds.max, zoom)._subtract(pixelOrigin)\r\n\t\t\t);\r\n\t\t\tvar size = bounds.getSize();\r\n\r\n\t\t\tL.DomUtil.setPosition(this._image, bounds.min);\r\n\t\t\tthis._image.style.width = size.x + 'px';\r\n\t\t\tthis._image.style.height = size.y + 'px';\r\n\t\t},\r\n\r\n\t\t_projectedToNewLayerPoint: function (point, zoom, center) {\r\n\t\t\tvar viewHalf = this._map.getSize()._divideBy(2);\r\n\t\t\tvar newTopLeft = this._map.project(center, zoom)._subtract(viewHalf)._round();\r\n\t\t\tvar topLeft = newTopLeft.add(this._map._getMapPanePos());\r\n\r\n\t\t\treturn this._transform(point, zoom)._subtract(topLeft);\r\n\t\t},\r\n\r\n\t\t_transform: function (point, zoom) {\r\n\t\t\tvar crs = this._map.options.crs;\r\n\t\t\tvar transformation = crs.transformation;\r\n\t\t\tvar scale = crs.scale(zoom);\r\n\r\n\t\t\treturn transformation.transform(point, scale);\r\n\t\t}\r\n\t});\r\n\r\n\tL.Proj.imageOverlay = function (url, bounds, options) {\r\n\t\treturn new L.Proj.ImageOverlay(url, bounds, options);\r\n\t};\r\n\r\n\treturn L.Proj;\r\n}));\r\n","/**\n * @Event 方法\n * @description: 默认创建方法：\n *      //     let map = L.map(\"map\", {\n        //         minZoom: 3,\n        //         maxZoom: 18,\n        //         center: [39.56, 116.20],\n        //         zoom: 8,\n        //         zoomControl: true, // 縮放按钮\n        //         attributionControl: false, // leaflet map logo\n        //         crs: L.CRS.Baidu\n        //     });\n //     L.tileLayer.baidu({ layer: 'time' }).addTo(map);\n * */\nrequire(\"proj4\");\nrequire(\"proj4leaflet\");\n\n// const titleD = 'http://127.0.0.1:8886/{z}/{x}/{y}.png'\n// const titleD = 'https://api.map.baidu.com/getscript?v=3.0&ak=7pQwLpGQZr0SdQ3vlDp8gu7ExEqjKRG1'\nconst bdImgOnline =\n  \"http://online{s}.map.bdimg.com/onlinelabel/?qt=tile&x={x}&y={y}&z={z}&styles=\";\n// const bdImgOnline = 'http://online{s}.map.bdimg.com/onlinelabel/?qt=tile&x={x}&y={y}&z={z}&styles=' + (option.bigfont ? 'ph' : 'pl') + '&scaler=1&p=1'\nconst timeOnline =\n  \"http://its.map.baidu.com:8002/traffic/TrafficTileService?x={x}&y={y}&level={z}&time=\" +\n  new Date().getTime() +\n  \"&label=web2D&v=017\";\nconst mapUrl =\n  \"http://webrd01.is.autonavi.com/appmaptile?lang=zh_cn&size=1&scale=1&style=7&x={x}&y={y}&z={z}\";\nconst localMapUrl =\n  \"http://127.0.0.1:8888/api/getLeafletMap?X={x}&Y={y}&Zoom={z}&Type=788865972\";\n\nL.CRS.Baidu = new L.Proj.CRS(\n  \"EPSG:900913\",\n  \"+proj=merc +a=6378206 +b=6356584.314245179 +lat_ts=0.0 +lon_0=0.0 +x_0=0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext  +no_defs\",\n  {\n    resolutions: (function () {\n      level = 19;\n      var res = [];\n      res[0] = Math.pow(2, 18);\n      for (var i = 1; i < level; i++) {\n        res[i] = Math.pow(2, 18 - i);\n      }\n      return res;\n    })(),\n    origin: [0, 0],\n    bounds: L.bounds([20037508.342789244, 0], [0, 20037508.342789244]),\n  }\n);\n\nL.tileLayer.baidu = function (option) {\n  option = option || {};\n  var layer;\n  var subdomains = \"0123456789\";\n  switch (option.layer) {\n    // 单图层\n    case \"vec\":\n    default:\n      layer = L.tileLayer(bdImgOnline, {\n        name: option.name,\n        subdomains: subdomains,\n        tms: true,\n      });\n      break;\n\n    //卫星图\n    case \"img_d\":\n      layer = L.tileLayer(\n        \"http://shangetu{s}.map.bdimg.com/it/u=x={x};y={y};z={z};v=009;type=sate&fm=46\",\n        {\n          name: option.name,\n          subdomains: subdomains,\n          tms: true,\n        }\n      );\n      break;\n\n    // 卫星图 实时路况\n    case \"img_z\":\n      layer = L.tileLayer(\n        \"http://online{s}.map.bdimg.com/tile/?qt=tile&x={x}&y={y}&z={z}&styles=\" +\n          (option.bigfont ? \"sh\" : \"sl\") +\n          \"&v=020\",\n        {\n          name: option.name,\n          subdomains: subdomains,\n          tms: true,\n        }\n      );\n      break;\n\n    //custom 各种自定义样式\n    case \"custom\":\n      //可选值：dark,midnight,grayscale,hardedge,light,redalert,googlelite,grassgreen,pink,darkgreen,bluish\n      option.customid = option.customid || \"midnight\";\n      layer = L.tileLayer(\n        \"http://api{s}.map.bdimg.com/customimage/tile?&x={x}&y={y}&z={z}&scale=1&customid=\" +\n          option.customid,\n        {\n          name: option.name,\n          subdomains: \"012\",\n          tms: true,\n        }\n      );\n      // layer = L.tileLayer(bdImgOnline, {\n      //     name: option.name, subdomains: subdomains, tms: true\n      // });\n      break;\n\n    //实时路况\n    case \"time\":\n      layer = L.tileLayer(timeOnline, {\n        name: option.name,\n        subdomains: subdomains,\n        tms: true,\n      });\n      break;\n\n    // 卫星图 + 卫星图 实时路况 合并 demo\n    case \"img\":\n      layer = L.layerGroup([\n        L.tileLayer.baidu({\n          name: \"底图\",\n          layer: \"img_d\",\n          bigfont: option.bigfont,\n        }),\n        L.tileLayer.baidu({\n          name: \"注记\",\n          layer: \"img_z\",\n          bigfont: option.bigfont,\n        }),\n      ]);\n      break;\n\n    // 单图层 + 单图层 实时路况 合并 demo\n    case \"img2\":\n      layer = L.layerGroup([\n        L.tileLayer.baidu({\n          name: \"底图\",\n          layer: \"vec\",\n          bigfont: option.bigfont,\n        }),\n        L.tileLayer.baidu({\n          name: \"注记\",\n          layer: \"time\",\n          bigfont: option.bigfont,\n        }),\n      ]);\n      break;\n\n    // 离线百度地图\n    case \"localMap\":\n      layer = L.tileLayer(localMapUrl, {\n        name: option.name,\n        subdomains: subdomains,\n        tms: true,\n      });\n      break;\n  }\n  return layer;\n};\n"],"names":["render","_vm","this","_c","_self","staticClass","attrs","on","onInput","onClear","model","value","searchText","callback","$$v","expression","restaurants","length","_l","item","key","uid","$event","choosePlace","_v","_s","name","_e","staticRenderFns","debounceFun","fn","wait","timer","context","args","arguments","clearTimeout","setTimeout","apply","data","map","timeout","marker","mapIcon","require","methods","initMap","L","minZoom","maxZoom","center","zoom","zoomControl","attributionControl","crs","CRS","Baidu","tileLayer","baidu","layer","addTo","setMapClick","e","latlng","console","log","ak","url","$axios","get","then","res","result","setMarker","markerIcon","removeLayer","divIcon","className","html","iconSize","iconAnchor","latLng","location","lat","lng","setView","Marker","icon","addLayer","mounted","component","defs","WGS84","GOOGLE","PJD_3PARAM","PJD_7PARAM","PJD_GRIDSHIFT","PJD_WGS84","PJD_NODATUM","SRS_WGS84_SEMIMAJOR","SRS_WGS84_SEMIMINOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","Math","PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","exports","ft","to_meter","ignoredChar","match","obj","testkey","processedKey","keys","Object","lkey","toLowerCase","replace","i","defData","paramName","paramVal","paramOutname","self","paramObj","split","v","trim","filter","a","reduce","p","push","params","proj","datum","rf","parseFloat","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","gamma","rectified_grid_angle","lonc","longc","x_0","x0","y_0","y0","k_0","k0","k","b","r_a","R_A","zone","parseInt","south","utmSouth","towgs84","datum_params","units","unit","from_greenwich","pm","PrimeMeridian","nadgrids","datumCode","axis","legalAxis","indexOf","substr","approx","NEUTRAL","KEYWORD","NUMBER","QUOTED","AFTERQUOTE","ENDED","whitespace","latin","keyword","endThings","digets","Parser","text","Error","level","place","root","stack","currentObject","state","parseString","txt","parser","output","mapit","Array","isArray","unshift","thing","out","newObj","sExpr","shift","convert","prototype","readCharicter","char","test","neutral","quoted","afterquote","number","word","afterItem","pop","newObjects","rename","outName","inName","d2r","input","cleanWKT","wkt","type","projName","local","PROJECTION","AXIS","axisOrder","ii","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","ratio","slice","sphere","ellps","TOWGS84","isFinite","renamer","list","forEach","lisp","that","def","charAt","parseProj","EPSG","ESRI","IAU2000","globals","testObj","code","testDef","codeWords","testWKT","some","codes","checkMercator","auth","checkProjStr","ext","testProj","parse","maybeProjStr","projStr","destination","source","property","undefined","eccent","sinphi","cosphi","con","sqrt","x","abs","sign","phi","com","pow","tan","ts","dphi","eccnth","atan","sin","init","es","cos","msfnz","forward","y","lon","adjust_lon","tsfnz","inverse","exp","phi2z","names","identity","pt","projs","merc","longlat","projStore","add","len","n","start","ellipseName","eccentricity","a2","b2","ep2","ellipse","Ellipsoid","datum_type","grids","wgs84","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","loadedNadgrids","nadgrid","view","DataView","isLittleEndian","detectLittleEndian","header","readHeader","nSubgrids","subgrids","readSubgrids","getNadgrids","parseNadgridString","optional","mandatory","grid","isNull","secondsToRadians","seconds","nFields","getInt32","warn","nSubgridFields","shiftType","decodeString","fromSemiMajorAxis","getFloat64","fromSemiMinorAxis","toSemiMajorAxis","toSemiMinorAxis","end","String","fromCharCode","Uint8Array","buffer","gridOffset","subHeader","readGridHeader","nodes","readGridNodes","lngColumnCount","round","upperLongitude","lowerLongitude","longitudeInterval","latColumnCount","upperLatitude","lowerLatitude","latitudeInterval","ll","del","lim","count","gridNodeCount","cvs","mapNodes","r","longitudeShift","latitudeShift","offset","parent","gridHeader","nodesOffset","gridRecordLength","gridShiftRecords","record","getFloat32","latitudeAccuracy","longitudeAccuracy","Projection","srsCode","error","json","parseCode","ourProj","projections","datumDef","Datum","sphere_","dc_sphere","ecc","dc_eccentricity","datumObj","extend","compareDatums","dest","geodeticToGeocentric","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","z","Infinity","geocentricToGeodetic","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","genau","genau2","maxiter","X","Y","Z","atan2","geocentricToWgs84","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricFromWgs84","x_tmp","y_tmp","z_tmp","checkParams","point","source_a","source_es","gridShiftCode","applyGridShift","dest_a","dest_b","dest_es","destGridShiftResult","Number","NaN","attemptedGrids","subgrid","epsilon","minX","minY","maxX","maxY","applySubgridShift","isNaN","pin","ct","val","tb","t","nadInterpolate","dif","tol","inx","indx","floor","frct","f00","f10","f11","f01","m11","m10","m00","m01","denorm","xin","yin","zin","array","m","checkCoord","num","TypeError","checkNotWGS","transform","enforceAxis","toPoint","hasZ","checkSanity","adjust_axis","datum_transform","transformer","from","to","coords","transformedArray","concat","splice","checkProj","oProj","proj4","fromProj","toProj","coord","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","A","I","O","V","accuracy","encode","LLtoUTM","mgrs","bbox","UTMtoLL","decode","toUpperCase","left","bottom","right","top","degToRad","deg","radToDeg","rad","LongOrigin","eccPrimeSquared","N","T","C","M","LongOriginRad","ZoneNumber","Lat","Long","eccSquared","LatRad","LongRad","UTMEasting","UTMNorthing","northing","easting","zoneNumber","zoneLetter","getLetterDesignator","utm","N1","T1","C1","R1","D","mu","phi1Rad","e1","topRight","LetterDesignator","seasting","snorthing","get100kID","setParm","get100kSetForZone","setColumn","setRow","getLetter100kID","column","row","parm","index","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","twoLetter","mgrsString","testChar","hunK","sb","substring","set","east100k","getEastingFromChar","north100k","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","curCol","eastingValue","rewindMarker","curRow","northingValue","Point","fromMGRS","mgrsStr","toMGRS","C00","C02","C04","C06","C08","C22","C44","C46","C48","C66","C68","C88","en","sphi","cphi","MAX_ITER","arg","s","pj_mlfn","pj_enfn","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","pj_inv_mlfn","tan_phi","d","ds","f","g","temp","h","asin","max","min","log1py","hypot","pp","B","cos_2B","h1","h2","arg_r","hr","hr1","hr2","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","sinh","cosh_arg_i","cosh","j","hi1","hi","tmerc","cgb","cbg","utg","gtu","np","Qn","gatg","Zb","clens","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","asinhy","tmp","clens_cmplx","dependsOn","adjust_zone","etmerc","esinp","rc","phic0","ratexp","K","srat","DEL_TOL","gauss","sinc0","cosc0","R2","title","sinc","cosc","cosl","rho","ssfn_","phit","eccen","coslat0","sinlat0","cons","ms1","X0","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phy0","lambda0","sinPhy0","semiMajorAxis","invF","flattening","e2","R","b0","k1","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","TOL","isTypeA","typeAProjections","projectionName","cosph0","F","H","sinph0","J","gamma0","lamc","lam1","lam2","phi1","phi2","alpha_c","no_off","no_rot","alp","gam","one_es","E","lam0","pi","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","v_pole_s","U","W","u","Qp","Sp","Tp","Vp","Up","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","theta","s45","s90","fi0","alfa","uq","u0","n0","s0","ro0","ad","gfi","deltav","eps","ro","czech","fi1","ok","e0","e3","e0fn","e1fn","e2fn","e3fn","mlfn","lam","nl","gN","tl","asq","cl","dd","ml1","imlfn","nl1","rl1","tl1","dl","dsq","adjust_lat","S_POLE","N_POLE","EQUIT","OBLIQ","mode","qp","qsfnz","mmf","apa","authset","rq","xmf","ymf","sinb1","cosb1","coslam","sinlam","q","sinb","cosb","cCe","sCe","ab","cosz","sinz","authlat","P00","P01","P02","P10","P11","P20","APA","beta","sin_po","cos_po","t1","qs1","t2","qs2","t3","qs0","ns0","qs","phi1z","asinz","eccnts","sin_p14","cos_p14","infinity_dist","coslon","ksp","iqsfnz","dlat","el","bl","tanphi","mln","mlnp","ma","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_re1","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_re1","z_n_im1","delta_x","delta_y","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","C_y","C_x","delta_theta","ml2","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","GH","Hs","kp","cos_c","s2","s3","s4","s5","cosAz","Ee","sinpsi","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","face","one_minus_f","one_minus_f_squared","xy","area","sinlon","qsc_shift_lon_origin","qsc_fwd_equat_face_theta","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","slon","COEFS_X","COEFS_Y","FXC","FYC","RC1","NODES","poly3_val","coefs","poly3_der","newton_rapshon","f_df","max_err","iters","upd","azi","degrees","tilt","bind","pn1","rp","pfact","omega","cg","sg","cw","sw","yt","ba","bm","bq","flip_axis","sweep","radius_g_1","radius_g","rone_es","radius_p","radius_p2","radius_p_inv2","shape","v_x","v_y","v_z","det","v_zp","Proj","sterea","stere","somerc","omerc","lcc","krovak","cass","laea","aea","gnom","cea","eqc","poly","nzmg","mill","sinu","moll","eqdc","vandg","aeqd","ortho","qsc","robin","geocent","tpers","geos","common","includedProjections","factory","define","__esModule","default","_isProj4Obj","Class","initialize","bounds","isP4","_proj","_projFromCodeDef","project","unproject","unbounded","point2","LatLng","urn","includes","options","transformation","Transformation","projection","Util","setOptions","origin","scales","_scales","resolutions","infinite","scale","baseScale","nextScale","scaleDiff","zDiff","iZoom","nextZoom","downScale","_closestElement","downZoom","distance","Earth","element","low","GeoJSON","geojson","_callLevel","call","addData","properties","coordsToLatLng","geoJson","ImageOverlay","_projectedBounds","_animateZoom","event","_map","getZoomScale","northWest","_projectedToNewLayerPoint","DomUtil","setTransform","_image","_reset","getZoom","pixelOrigin","getPixelOrigin","_transform","_subtract","size","getSize","setPosition","style","width","height","viewHalf","_divideBy","newTopLeft","_round","topLeft","_getMapPanePos","imageOverlay","bdImgOnline","timeOnline","Date","getTime","localMapUrl","option","subdomains","tms","bigfont","customid","layerGroup"],"sourceRoot":""}