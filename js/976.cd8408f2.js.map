{"version":3,"file":"js/976.cd8408f2.js","mappings":"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","sources":["webpack://vuetools/./src/views/leaflet/leaflet.vue","webpack://vuetools/src/views/leaflet/leaflet.vue","webpack://vuetools/./src/views/leaflet/leaflet.vue?495c","webpack://vuetools/./src/views/leaflet/leaflet.vue?b8f6","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/global.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/constants/values.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/constants/PrimeMeridian.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/constants/units.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/match.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/projString.js","webpack://vuetools/./node_modules/_wkt-parser@1.3.3@wkt-parser/parser.js","webpack://vuetools/./node_modules/_wkt-parser@1.3.3@wkt-parser/process.js","webpack://vuetools/./node_modules/_wkt-parser@1.3.3@wkt-parser/index.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/defs.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/parseCode.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/extend.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/common/msfnz.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/common/sign.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/common/adjust_lon.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/common/tsfnz.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/common/phi2z.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/projections/merc.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/projections/longlat.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/projections.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/constants/Ellipsoid.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/deriveConstants.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/constants/Datum.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/datum.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/nadgrid.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/Proj.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/datumUtils.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/datum_transform.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/adjust_axis.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/common/toPoint.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/checkSanity.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/transform.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/core.js","webpack://vuetools/./node_modules/_mgrs@1.0.0@mgrs/mgrs.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/Point.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/common/pj_enfn.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/common/pj_mlfn.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/common/pj_inv_mlfn.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/projections/tmerc.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/common/sinh.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/common/hypot.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/common/log1py.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/common/asinhy.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/common/gatg.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/common/clens.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/common/cosh.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/common/clens_cmplx.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/projections/etmerc.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/common/adjust_zone.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/projections/utm.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/common/srat.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/projections/gauss.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/projections/sterea.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/projections/stere.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/projections/somerc.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/projections/omerc.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/projections/lcc.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/projections/krovak.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/common/mlfn.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/common/e0fn.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/common/e1fn.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/common/e2fn.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/common/e3fn.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/common/gN.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/common/adjust_lat.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/common/imlfn.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/projections/cass.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/common/qsfnz.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/projections/laea.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/common/asinz.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/projections/aea.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/projections/gnom.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/common/iqsfnz.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/projections/cea.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/projections/eqc.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/projections/poly.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/projections/nzmg.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/projections/mill.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/projections/sinu.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/projections/moll.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/projections/eqdc.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/projections/vandg.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/projections/aeqd.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/projections/ortho.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/projections/qsc.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/projections/robin.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/projections/geocent.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/projections/tpers.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/projections/geos.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/projs.js","webpack://vuetools/./node_modules/_proj4@2.9.0@proj4/lib/index.js","webpack://vuetools/./node_modules/_proj4leaflet@1.0.2@proj4leaflet/src/proj4leaflet.js","webpack://vuetools/./src/utils/leafletMap/tileLayer.baidu.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _vm._m(0)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"left-let-page\"},[_c('div',{attrs:{\"id\":\"map\"}})])\n}]\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"left-let-page\">\n    <div id=\"map\"></div>\n  </div>\n</template>\n<script>\nimport \"@/utils/leafletMap/tileLayer.baidu.js\";\n\nexport default {\n  data() {\n    return {\n      map: null,\n    };\n  },\n  mounted() {\n    this.initDate();\n  },\n  methods: {\n    initDate() {\n      let map = L.map(\"map\", {\n        minZoom: 3,\n        maxZoom: 18,\n        // center: [39.56, 116.20],\n        center: [30.56, 120.2],\n        zoom: 8,\n        zoomControl: true, // 縮放按钮\n        attributionControl: false, // leaflet map logo\n        crs: L.CRS.Baidu,\n      });\n      L.tileLayer.baidu({ layer: \"img2\" }).addTo(map);\n    },\n  },\n};\n</script>\n<style scoped lang=\"scss\">\n.left-let-page {\n  #map {\n    width: 100vw;\n    height: 100vh;\n    margin: auto;\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./leaflet.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./leaflet.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./leaflet.vue?vue&type=template&id=4aeb1ff1&scoped=true&\"\nimport script from \"./leaflet.vue?vue&type=script&lang=js&\"\nexport * from \"./leaflet.vue?vue&type=script&lang=js&\"\nimport style0 from \"./leaflet.vue?vue&type=style&index=0&id=4aeb1ff1&prod&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4aeb1ff1\",\n  null\n  \n)\n\nexport default component.exports","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function() {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  } else if (!wkt.lat_ts && wkt.lat0 && wkt.projName === 'Polar_Stereographic') {\n    wkt.lat_ts = wkt.lat0;\n    wkt.lat0 = d2r(wkt.lat0 > 0 ? 90 : -90);\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk80ign = {\n  a: 6378249.2,\n  b: 6356515,\n  rf: 293.4660213,\n  ellipseName: \"Clarke 1880 (IGN)\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n","import {PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  if (header.nSubgrids > 1) {\n    console.log('Only single NTv2 subgrids are currently supported, subsequent sub grids are ignored');\n  }\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {header: header, subgrids: subgrids};\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) { return null; }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n  }\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n    };\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport {getNadgrids} from \"./nadgrid\";\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = {x: -point.x, y: point.y};\n  var output = {x: Number.NaN, y: Number.NaN};\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    onlyMandatoryGrids = grid.mandatory;\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n      continue;\n    }\n    var subgrid = grid.grid.subgrids[0];\n    // skip tables that don't match our point at all\n    var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n    var minX = subgrid.ll[0] - epsilon;\n    var minY = subgrid.ll[1] - epsilon;\n    var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n    var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n    if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n      continue;\n    }\n    output = applySubgridShift(input, inverse, subgrid);\n    if (!isNaN(output.x)) {\n      break;\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\"+\n      -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {x: Number.NaN, y: Number.NaN};\n  if (isNaN(pin.x)) { return val; }\n  var tb = {x: pin.x, y: pin.y};\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n  var val= {x: Number.NaN, y: Number.NaN};\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx++;\n  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx += ct.lim[0];\n  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx--;\n  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return (\n    (source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM || source.datum.datum_type === PJD_GRIDSHIFT) && dest.datumCode !== 'WGS84') ||\n    ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM || dest.datum.datum_type === PJD_GRIDSHIFT) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  } else {\n    // Clone the point object so inputs don't get modified\n    point = {\n      x: point.x,\n      y: point.y,\n      z: point.z,\n      m: point.m\n    };\n  }\n  var hasZ = point.z !== undefined;\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  if (!hasZ) {\n    delete point.z;\n  }\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.splice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.splice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.splice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n  \n  //double lat0;                    /* the reference latitude               */\n  //double long0;                   /* the reference longitude              */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n  \n  //the above value can be set with proj4.defs\n  //example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  \"Lambert Tangential Conformal Conic Projection\",\n  \"Lambert_Conformal_Conic\",\n  \"Lambert_Conformal_Conic_1SP\",\n  \"Lambert_Conformal_Conic_2SP\",\n  \"lcc\",\n  \"Lambert Conic Conformal (1SP)\",\n  \"Lambert Conic Conformal (2SP)\"\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};","\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import hypot from '../common/hypot';\n\nexport function init() {\n    this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n    this.h = Number(this.h);\n    this.radius_g_1 = this.h / this.a;\n\n    if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n        throw new Error();\n    }\n\n    this.radius_g = 1.0 + this.radius_g_1;\n    this.C = this.radius_g * this.radius_g - 1.0;\n\n    if (this.es !== 0.0) {\n        var one_es = 1.0 - this.es;\n        var rone_es = 1 / one_es;\n\n        this.radius_p = Math.sqrt(one_es);\n        this.radius_p2 = one_es;\n        this.radius_p_inv2 = rone_es;\n\n        this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n    } else {\n        this.radius_p = 1.0;\n        this.radius_p2 = 1.0;\n        this.radius_p_inv2 = 1.0;\n\n        this.shape = 'sphere';  // Use as a condition in the forward and inverse functions.\n    }\n\n    if (!this.title) {\n        this.title = \"Geostationary Satellite View\";\n    }\n}\n\nfunction forward(p) {\n    var lon = p.x;\n    var lat = p.y;\n    var tmp, v_x, v_y, v_z;\n    lon = lon - this.long0;\n\n    if (this.shape === 'ellipse') {\n        lat = Math.atan(this.radius_p2 * Math.tan(lat));\n        var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n        v_x = r * Math.cos(lon) * Math.cos(lat);\n        v_y = r * Math.sin(lon) * Math.cos(lat);\n        v_z = r * Math.sin(lat);\n\n        if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        tmp = this.radius_g - v_x;\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    } else if (this.shape === 'sphere') {\n        tmp = Math.cos(lat);\n        v_x = Math.cos(lon) * tmp;\n        v_y = Math.sin(lon) * tmp;\n        v_z = Math.sin(lat);\n        tmp = this.radius_g - v_x;\n\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    }\n    p.x = p.x * this.a;\n    p.y = p.y * this.a;\n    return p;\n}\n\nfunction inverse(p) {\n    var v_x = -1.0;\n    var v_y = 0.0;\n    var v_z = 0.0;\n    var a, b, det, k;\n\n    p.x = p.x / this.a;\n    p.y = p.y / this.a;\n\n    if (this.shape === 'ellipse') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n        }\n\n        var v_zp = v_z / this.radius_p;\n        a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n        p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n    } else if (this.shape === 'sphere') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n        }\n\n        a = v_y * v_y + v_z * v_z + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    }\n    p.x = p.x + this.long0;\n    return p;\n}\n\nexport var names = [\"Geostationary Satellite View\", \"Geostationary_Satellite\", \"geos\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names,\n};\n\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n}","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n","(function (factory) {\r\n\tvar L, proj4;\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\t// AMD\r\n\t\tdefine(['leaflet', 'proj4'], factory);\r\n\t} else if (typeof module === 'object' && typeof module.exports === \"object\") {\r\n\t\t// Node/CommonJS\r\n\t\tL = require('leaflet');\r\n\t\tproj4 = require('proj4');\r\n\t\tmodule.exports = factory(L, proj4);\r\n\t} else {\r\n\t\t// Browser globals\r\n\t\tif (typeof window.L === 'undefined' || typeof window.proj4 === 'undefined')\r\n\t\t\tthrow 'Leaflet and proj4 must be loaded first';\r\n\t\tfactory(window.L, window.proj4);\r\n\t}\r\n}(function (L, proj4) {\r\n\tif (proj4.__esModule && proj4.default) {\r\n\t\t// If proj4 was bundled as an ES6 module, unwrap it to get\r\n\t\t// to the actual main proj4 object.\r\n\t\t// See discussion in https://github.com/kartena/Proj4Leaflet/pull/147\r\n\t\tproj4 = proj4.default;\r\n\t}\r\n \r\n\tL.Proj = {};\r\n\r\n\tL.Proj._isProj4Obj = function(a) {\r\n\t\treturn (typeof a.inverse !== 'undefined' &&\r\n\t\t\ttypeof a.forward !== 'undefined');\r\n\t};\r\n\r\n\tL.Proj.Projection = L.Class.extend({\r\n\t\tinitialize: function(code, def, bounds) {\r\n\t\t\tvar isP4 = L.Proj._isProj4Obj(code);\r\n\t\t\tthis._proj = isP4 ? code : this._projFromCodeDef(code, def);\r\n\t\t\tthis.bounds = isP4 ? def : bounds;\r\n\t\t},\r\n\r\n\t\tproject: function (latlng) {\r\n\t\t\tvar point = this._proj.forward([latlng.lng, latlng.lat]);\r\n\t\t\treturn new L.Point(point[0], point[1]);\r\n\t\t},\r\n\r\n\t\tunproject: function (point, unbounded) {\r\n\t\t\tvar point2 = this._proj.inverse([point.x, point.y]);\r\n\t\t\treturn new L.LatLng(point2[1], point2[0], unbounded);\r\n\t\t},\r\n\r\n\t\t_projFromCodeDef: function(code, def) {\r\n\t\t\tif (def) {\r\n\t\t\t\tproj4.defs(code, def);\r\n\t\t\t} else if (proj4.defs[code] === undefined) {\r\n\t\t\t\tvar urn = code.split(':');\r\n\t\t\t\tif (urn.length > 3) {\r\n\t\t\t\t\tcode = urn[urn.length - 3] + ':' + urn[urn.length - 1];\r\n\t\t\t\t}\r\n\t\t\t\tif (proj4.defs[code] === undefined) {\r\n\t\t\t\t\tthrow 'No projection definition for code ' + code;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn proj4(code);\r\n\t\t}\r\n\t});\r\n\r\n\tL.Proj.CRS = L.Class.extend({\r\n\t\tincludes: L.CRS,\r\n\r\n\t\toptions: {\r\n\t\t\ttransformation: new L.Transformation(1, 0, -1, 0)\r\n\t\t},\r\n\r\n\t\tinitialize: function(a, b, c) {\r\n\t\t\tvar code,\r\n\t\t\t    proj,\r\n\t\t\t    def,\r\n\t\t\t    options;\r\n\r\n\t\t\tif (L.Proj._isProj4Obj(a)) {\r\n\t\t\t\tproj = a;\r\n\t\t\t\tcode = proj.srsCode;\r\n\t\t\t\toptions = b || {};\r\n\r\n\t\t\t\tthis.projection = new L.Proj.Projection(proj, options.bounds);\r\n\t\t\t} else {\r\n\t\t\t\tcode = a;\r\n\t\t\t\tdef = b;\r\n\t\t\t\toptions = c || {};\r\n\t\t\t\tthis.projection = new L.Proj.Projection(code, def, options.bounds);\r\n\t\t\t}\r\n\r\n\t\t\tL.Util.setOptions(this, options);\r\n\t\t\tthis.code = code;\r\n\t\t\tthis.transformation = this.options.transformation;\r\n\r\n\t\t\tif (this.options.origin) {\r\n\t\t\t\tthis.transformation =\r\n\t\t\t\t\tnew L.Transformation(1, -this.options.origin[0],\r\n\t\t\t\t\t\t-1, this.options.origin[1]);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.options.scales) {\r\n\t\t\t\tthis._scales = this.options.scales;\r\n\t\t\t} else if (this.options.resolutions) {\r\n\t\t\t\tthis._scales = [];\r\n\t\t\t\tfor (var i = this.options.resolutions.length - 1; i >= 0; i--) {\r\n\t\t\t\t\tif (this.options.resolutions[i]) {\r\n\t\t\t\t\t\tthis._scales[i] = 1 / this.options.resolutions[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.infinite = !this.options.bounds;\r\n\r\n\t\t},\r\n\r\n\t\tscale: function(zoom) {\r\n\t\t\tvar iZoom = Math.floor(zoom),\r\n\t\t\t\tbaseScale,\r\n\t\t\t\tnextScale,\r\n\t\t\t\tscaleDiff,\r\n\t\t\t\tzDiff;\r\n\t\t\tif (zoom === iZoom) {\r\n\t\t\t\treturn this._scales[zoom];\r\n\t\t\t} else {\r\n\t\t\t\t// Non-integer zoom, interpolate\r\n\t\t\t\tbaseScale = this._scales[iZoom];\r\n\t\t\t\tnextScale = this._scales[iZoom + 1];\r\n\t\t\t\tscaleDiff = nextScale - baseScale;\r\n\t\t\t\tzDiff = (zoom - iZoom);\r\n\t\t\t\treturn baseScale + scaleDiff * zDiff;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tzoom: function(scale) {\r\n\t\t\t// Find closest number in this._scales, down\r\n\t\t\tvar downScale = this._closestElement(this._scales, scale),\r\n\t\t\t\tdownZoom = this._scales.indexOf(downScale),\r\n\t\t\t\tnextScale,\r\n\t\t\t\tnextZoom,\r\n\t\t\t\tscaleDiff;\r\n\t\t\t// Check if scale is downScale => return array index\r\n\t\t\tif (scale === downScale) {\r\n\t\t\t\treturn downZoom;\r\n\t\t\t}\r\n\t\t\tif (downScale === undefined) {\r\n\t\t\t\treturn -Infinity;\r\n\t\t\t}\r\n\t\t\t// Interpolate\r\n\t\t\tnextZoom = downZoom + 1;\r\n\t\t\tnextScale = this._scales[nextZoom];\r\n\t\t\tif (nextScale === undefined) {\r\n\t\t\t\treturn Infinity;\r\n\t\t\t}\r\n\t\t\tscaleDiff = nextScale - downScale;\r\n\t\t\treturn (scale - downScale) / scaleDiff + downZoom;\r\n\t\t},\r\n\r\n\t\tdistance: L.CRS.Earth.distance,\r\n\r\n\t\tR: L.CRS.Earth.R,\r\n\r\n\t\t/* Get the closest lowest element in an array */\r\n\t\t_closestElement: function(array, element) {\r\n\t\t\tvar low;\r\n\t\t\tfor (var i = array.length; i--;) {\r\n\t\t\t\tif (array[i] <= element && (low === undefined || low < array[i])) {\r\n\t\t\t\t\tlow = array[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn low;\r\n\t\t}\r\n\t});\r\n\r\n\tL.Proj.GeoJSON = L.GeoJSON.extend({\r\n\t\tinitialize: function(geojson, options) {\r\n\t\t\tthis._callLevel = 0;\r\n\t\t\tL.GeoJSON.prototype.initialize.call(this, geojson, options);\r\n\t\t},\r\n\r\n\t\taddData: function(geojson) {\r\n\t\t\tvar crs;\r\n\r\n\t\t\tif (geojson) {\r\n\t\t\t\tif (geojson.crs && geojson.crs.type === 'name') {\r\n\t\t\t\t\tcrs = new L.Proj.CRS(geojson.crs.properties.name);\r\n\t\t\t\t} else if (geojson.crs && geojson.crs.type) {\r\n\t\t\t\t\tcrs = new L.Proj.CRS(geojson.crs.type + ':' + geojson.crs.properties.code);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (crs !== undefined) {\r\n\t\t\t\t\tthis.options.coordsToLatLng = function(coords) {\r\n\t\t\t\t\t\tvar point = L.point(coords[0], coords[1]);\r\n\t\t\t\t\t\treturn crs.projection.unproject(point);\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Base class' addData might call us recursively, but\r\n\t\t\t// CRS shouldn't be cleared in that case, since CRS applies\r\n\t\t\t// to the whole GeoJSON, inluding sub-features.\r\n\t\t\tthis._callLevel++;\r\n\t\t\ttry {\r\n\t\t\t\tL.GeoJSON.prototype.addData.call(this, geojson);\r\n\t\t\t} finally {\r\n\t\t\t\tthis._callLevel--;\r\n\t\t\t\tif (this._callLevel === 0) {\r\n\t\t\t\t\tdelete this.options.coordsToLatLng;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tL.Proj.geoJson = function(geojson, options) {\r\n\t\treturn new L.Proj.GeoJSON(geojson, options);\r\n\t};\r\n\r\n\tL.Proj.ImageOverlay = L.ImageOverlay.extend({\r\n\t\tinitialize: function (url, bounds, options) {\r\n\t\t\tL.ImageOverlay.prototype.initialize.call(this, url, null, options);\r\n\t\t\tthis._projectedBounds = bounds;\r\n\t\t},\r\n\r\n\t\t// Danger ahead: Overriding internal methods in Leaflet.\r\n\t\t// Decided to do this rather than making a copy of L.ImageOverlay\r\n\t\t// and doing very tiny modifications to it.\r\n\t\t// Future will tell if this was wise or not.\r\n\t\t_animateZoom: function (event) {\r\n\t\t\tvar scale = this._map.getZoomScale(event.zoom);\r\n\t\t\tvar northWest = L.point(this._projectedBounds.min.x, this._projectedBounds.max.y);\r\n\t\t\tvar offset = this._projectedToNewLayerPoint(northWest, event.zoom, event.center);\r\n\r\n\t\t\tL.DomUtil.setTransform(this._image, offset, scale);\r\n\t\t},\r\n\r\n\t\t_reset: function () {\r\n\t\t\tvar zoom = this._map.getZoom();\r\n\t\t\tvar pixelOrigin = this._map.getPixelOrigin();\r\n\t\t\tvar bounds = L.bounds(\r\n\t\t\t\tthis._transform(this._projectedBounds.min, zoom)._subtract(pixelOrigin),\r\n\t\t\t\tthis._transform(this._projectedBounds.max, zoom)._subtract(pixelOrigin)\r\n\t\t\t);\r\n\t\t\tvar size = bounds.getSize();\r\n\r\n\t\t\tL.DomUtil.setPosition(this._image, bounds.min);\r\n\t\t\tthis._image.style.width = size.x + 'px';\r\n\t\t\tthis._image.style.height = size.y + 'px';\r\n\t\t},\r\n\r\n\t\t_projectedToNewLayerPoint: function (point, zoom, center) {\r\n\t\t\tvar viewHalf = this._map.getSize()._divideBy(2);\r\n\t\t\tvar newTopLeft = this._map.project(center, zoom)._subtract(viewHalf)._round();\r\n\t\t\tvar topLeft = newTopLeft.add(this._map._getMapPanePos());\r\n\r\n\t\t\treturn this._transform(point, zoom)._subtract(topLeft);\r\n\t\t},\r\n\r\n\t\t_transform: function (point, zoom) {\r\n\t\t\tvar crs = this._map.options.crs;\r\n\t\t\tvar transformation = crs.transformation;\r\n\t\t\tvar scale = crs.scale(zoom);\r\n\r\n\t\t\treturn transformation.transform(point, scale);\r\n\t\t}\r\n\t});\r\n\r\n\tL.Proj.imageOverlay = function (url, bounds, options) {\r\n\t\treturn new L.Proj.ImageOverlay(url, bounds, options);\r\n\t};\r\n\r\n\treturn L.Proj;\r\n}));\r\n","/**\n * @Event 方法\n * @description: 默认创建方法：\n *      //     let map = L.map(\"map\", {\n        //         minZoom: 3,\n        //         maxZoom: 18,\n        //         center: [39.56, 116.20],\n        //         zoom: 8,\n        //         zoomControl: true, // 縮放按钮\n        //         attributionControl: false, // leaflet map logo\n        //         crs: L.CRS.Baidu\n        //     });\n //     L.tileLayer.baidu({ layer: 'time' }).addTo(map);\n * */\nrequire(\"proj4\");\nrequire(\"proj4leaflet\");\n\n// const titleD = 'http://127.0.0.1:8886/{z}/{x}/{y}.png'\n// const titleD = 'https://api.map.baidu.com/getscript?v=3.0&ak=7pQwLpGQZr0SdQ3vlDp8gu7ExEqjKRG1'\nconst bdImgOnline =\n  \"http://online{s}.map.bdimg.com/onlinelabel/?qt=tile&x={x}&y={y}&z={z}&styles=\";\n// const bdImgOnline = 'http://online{s}.map.bdimg.com/onlinelabel/?qt=tile&x={x}&y={y}&z={z}&styles=' + (option.bigfont ? 'ph' : 'pl') + '&scaler=1&p=1'\nconst timeOnline =\n  \"http://its.map.baidu.com:8002/traffic/TrafficTileService?x={x}&y={y}&level={z}&time=\" +\n  new Date().getTime() +\n  \"&label=web2D&v=017\";\nconst mapUrl =\n  \"http://webrd01.is.autonavi.com/appmaptile?lang=zh_cn&size=1&scale=1&style=7&x={x}&y={y}&z={z}\";\nconst localMapUrl =\n  \"http://127.0.0.1:8888/api/getLeafletMap?X={x}&Y={y}&Zoom={z}&Type=788865972\";\n\nL.CRS.Baidu = new L.Proj.CRS(\n  \"EPSG:900913\",\n  \"+proj=merc +a=6378206 +b=6356584.314245179 +lat_ts=0.0 +lon_0=0.0 +x_0=0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext  +no_defs\",\n  {\n    resolutions: (function () {\n      level = 19;\n      var res = [];\n      res[0] = Math.pow(2, 18);\n      for (var i = 1; i < level; i++) {\n        res[i] = Math.pow(2, 18 - i);\n      }\n      return res;\n    })(),\n    origin: [0, 0],\n    bounds: L.bounds([20037508.342789244, 0], [0, 20037508.342789244]),\n  }\n);\n\nL.tileLayer.baidu = function (option) {\n  option = option || {};\n  var layer;\n  var subdomains = \"0123456789\";\n  switch (option.layer) {\n    // 单图层\n    case \"vec\":\n    default:\n      layer = L.tileLayer(bdImgOnline, {\n        name: option.name,\n        subdomains: subdomains,\n        tms: true,\n      });\n      break;\n\n    //卫星图\n    case \"img_d\":\n      layer = L.tileLayer(\n        \"http://shangetu{s}.map.bdimg.com/it/u=x={x};y={y};z={z};v=009;type=sate&fm=46\",\n        {\n          name: option.name,\n          subdomains: subdomains,\n          tms: true,\n        }\n      );\n      break;\n\n    // 卫星图 实时路况\n    case \"img_z\":\n      layer = L.tileLayer(\n        \"http://online{s}.map.bdimg.com/tile/?qt=tile&x={x}&y={y}&z={z}&styles=\" +\n          (option.bigfont ? \"sh\" : \"sl\") +\n          \"&v=020\",\n        {\n          name: option.name,\n          subdomains: subdomains,\n          tms: true,\n        }\n      );\n      break;\n\n    //custom 各种自定义样式\n    case \"custom\":\n      //可选值：dark,midnight,grayscale,hardedge,light,redalert,googlelite,grassgreen,pink,darkgreen,bluish\n      option.customid = option.customid || \"midnight\";\n      layer = L.tileLayer(\n        \"http://api{s}.map.bdimg.com/customimage/tile?&x={x}&y={y}&z={z}&scale=1&customid=\" +\n          option.customid,\n        {\n          name: option.name,\n          subdomains: \"012\",\n          tms: true,\n        }\n      );\n      // layer = L.tileLayer(bdImgOnline, {\n      //     name: option.name, subdomains: subdomains, tms: true\n      // });\n      break;\n\n    //实时路况\n    case \"time\":\n      layer = L.tileLayer(timeOnline, {\n        name: option.name,\n        subdomains: subdomains,\n        tms: true,\n      });\n      break;\n\n    // 卫星图 + 卫星图 实时路况 合并 demo\n    case \"img\":\n      layer = L.layerGroup([\n        L.tileLayer.baidu({\n          name: \"底图\",\n          layer: \"img_d\",\n          bigfont: option.bigfont,\n        }),\n        L.tileLayer.baidu({\n          name: \"注记\",\n          layer: \"img_z\",\n          bigfont: option.bigfont,\n        }),\n      ]);\n      break;\n\n    // 单图层 + 单图层 实时路况 合并 demo\n    case \"img2\":\n      layer = L.layerGroup([\n        L.tileLayer.baidu({\n          name: \"底图\",\n          layer: \"vec\",\n          bigfont: option.bigfont,\n        }),\n        L.tileLayer.baidu({\n          name: \"注记\",\n          layer: \"time\",\n          bigfont: option.bigfont,\n        }),\n      ]);\n      break;\n\n    // 离线百度地图\n    case \"localMap\":\n      layer = L.tileLayer(localMapUrl, {\n        name: option.name,\n        subdomains: subdomains,\n        tms: true,\n      });\n      break;\n  }\n  return layer;\n};\n"],"names":["render","_vm","this","_self","_c","_m","staticRenderFns","staticClass","attrs","data","map","mounted","initDate","methods","L","minZoom","maxZoom","center","zoom","zoomControl","attributionControl","crs","CRS","Baidu","tileLayer","baidu","layer","addTo","component","defs","WGS84","GOOGLE","PJD_3PARAM","PJD_7PARAM","PJD_GRIDSHIFT","PJD_WGS84","PJD_NODATUM","SRS_WGS84_SEMIMAJOR","SRS_WGS84_SEMIMINOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","Math","PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","exports","ft","to_meter","ignoredChar","match","obj","key","testkey","processedKey","keys","Object","lkey","toLowerCase","replace","i","length","defData","paramName","paramVal","paramOutname","self","paramObj","split","v","trim","filter","a","reduce","p","push","params","proj","datum","rf","parseFloat","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","gamma","rectified_grid_angle","lonc","longc","x_0","x0","y_0","y0","k_0","k0","k","b","r_a","R_A","zone","parseInt","south","utmSouth","towgs84","datum_params","units","unit","from_greenwich","pm","PrimeMeridian","nadgrids","datumCode","axis","legalAxis","indexOf","substr","approx","NEUTRAL","KEYWORD","NUMBER","QUOTED","AFTERQUOTE","ENDED","whitespace","latin","keyword","endThings","digets","Parser","text","Error","level","place","root","stack","currentObject","state","parseString","txt","parser","output","mapit","value","Array","isArray","unshift","thing","out","newObj","item","sExpr","shift","name","convert","prototype","readCharicter","char","test","neutral","quoted","afterquote","number","word","afterItem","pop","newObjects","rename","outName","inName","d2r","input","cleanWKT","wkt","type","projName","local","PROJECTION","AXIS","axisOrder","ii","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","ratio","slice","sphere","ellps","TOWGS84","isFinite","renamer","list","forEach","lisp","that","arguments","def","charAt","parseProj","apply","EPSG","ESRI","IAU2000","console","log","globals","testObj","code","testDef","codeWords","testWKT","some","codes","checkMercator","auth","checkProjStr","ext","testProj","parse","maybeProjStr","projStr","destination","source","property","undefined","eccent","sinphi","cosphi","con","sqrt","x","abs","sign","phi","com","pow","tan","ts","dphi","eccnth","atan","sin","init","es","e","cos","msfnz","forward","y","lon","lat","adjust_lon","tsfnz","inverse","exp","phi2z","names","identity","pt","projs","merc","longlat","projStore","add","len","n","get","start","ellipseName","eccentricity","a2","b2","ep2","ellipse","Ellipsoid","datum_type","grids","wgs84","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","loadedNadgrids","nadgrid","view","DataView","isLittleEndian","detectLittleEndian","header","readHeader","nSubgrids","subgrids","readSubgrids","getNadgrids","parseNadgridString","optional","mandatory","grid","isNull","secondsToRadians","seconds","nFields","getInt32","warn","nSubgridFields","shiftType","decodeString","fromSemiMajorAxis","getFloat64","fromSemiMinorAxis","toSemiMajorAxis","toSemiMinorAxis","end","String","fromCharCode","Uint8Array","buffer","gridOffset","subHeader","readGridHeader","nodes","readGridNodes","lngColumnCount","round","upperLongitude","lowerLongitude","longitudeInterval","latColumnCount","upperLatitude","lowerLatitude","latitudeInterval","ll","del","lim","count","gridNodeCount","cvs","mapNodes","r","longitudeShift","latitudeShift","offset","parent","gridHeader","nodesOffset","gridRecordLength","gridShiftRecords","record","getFloat32","latitudeAccuracy","longitudeAccuracy","Projection","srsCode","callback","error","json","parseCode","ourProj","projections","datumDef","Datum","sphere_","dc_sphere","ecc","dc_eccentricity","datumObj","extend","compareDatums","dest","geodeticToGeocentric","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","z","Infinity","geocentricToGeodetic","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","genau","genau2","maxiter","X","Y","Z","atan2","geocentricToWgs84","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricFromWgs84","x_tmp","y_tmp","z_tmp","checkParams","point","source_a","source_es","gridShiftCode","applyGridShift","dest_a","dest_b","dest_es","destGridShiftResult","Number","NaN","attemptedGrids","subgrid","epsilon","minX","minY","maxX","maxY","applySubgridShift","isNaN","pin","ct","val","tb","t","nadInterpolate","dif","tol","inx","indx","floor","frct","f00","f10","f11","f01","m11","m10","m00","m01","denorm","xin","yin","zin","array","m","checkCoord","num","TypeError","checkNotWGS","transform","enforceAxis","toPoint","hasZ","checkSanity","adjust_axis","datum_transform","transformer","from","to","coords","transformedArray","concat","splice","checkProj","oProj","proj4","fromProj","toProj","coord","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","A","I","O","V","accuracy","encode","LLtoUTM","mgrs","bbox","UTMtoLL","decode","toUpperCase","left","bottom","right","top","degToRad","deg","radToDeg","rad","LongOrigin","eccPrimeSquared","N","T","C","M","LongOriginRad","ZoneNumber","Lat","Long","eccSquared","LatRad","LongRad","UTMEasting","UTMNorthing","northing","easting","zoneNumber","zoneLetter","getLetterDesignator","utm","N1","T1","C1","R1","D","mu","phi1Rad","e1","result","topRight","LetterDesignator","seasting","snorthing","get100kID","setParm","get100kSetForZone","setColumn","setRow","getLetter100kID","column","row","parm","index","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","twoLetter","mgrsString","testChar","hunK","sb","substring","set","east100k","getEastingFromChar","north100k","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","curCol","eastingValue","rewindMarker","curRow","northingValue","Point","fromMGRS","mgrsStr","toMGRS","C00","C02","C04","C06","C08","C22","C44","C46","C48","C66","C68","C88","en","sphi","cphi","MAX_ITER","arg","s","pj_mlfn","pj_enfn","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","pj_inv_mlfn","tan_phi","d","ds","f","g","temp","h","asin","max","min","log1py","hypot","pp","B","cos_2B","h1","h2","arg_r","hr","hr1","hr2","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","sinh","cosh_arg_i","cosh","j","hi1","hi","tmerc","cgb","cbg","utg","gtu","np","Qn","gatg","Zb","clens","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","asinhy","tmp","clens_cmplx","dependsOn","adjust_zone","etmerc","esinp","rc","phic0","ratexp","K","srat","DEL_TOL","gauss","sinc0","cosc0","R2","title","sinc","cosc","cosl","rho","ssfn_","phit","eccen","coslat0","sinlat0","cons","ms1","X0","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phy0","lambda0","sinPhy0","semiMajorAxis","invF","flattening","e2","R","b0","k1","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","TOL","isTypeA","typeAProjections","projectionName","cosph0","F","H","sinph0","J","gamma0","lamc","lam1","lam2","phi1","phi2","alpha_c","no_off","no_rot","alp","gam","one_es","E","lam0","pi","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","v_pole_s","U","W","u","Qp","Sp","Tp","Vp","Up","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","theta","s45","s90","fi0","alfa","uq","u0","n0","s0","ro0","ad","gfi","deltav","eps","ro","czech","fi1","ok","e0","e3","e0fn","e1fn","e2fn","e3fn","mlfn","lam","nl","gN","tl","asq","cl","dd","ml1","imlfn","nl1","rl1","tl1","dl","dsq","adjust_lat","S_POLE","N_POLE","EQUIT","OBLIQ","mode","qp","qsfnz","mmf","apa","authset","rq","xmf","ymf","sinb1","cosb1","coslam","sinlam","q","sinb","cosb","cCe","sCe","ab","cosz","sinz","authlat","P00","P01","P02","P10","P11","P20","APA","beta","sin_po","cos_po","t1","qs1","t2","qs2","t3","qs0","ns0","qs","phi1z","asinz","eccnts","sin_p14","cos_p14","infinity_dist","coslon","ksp","iqsfnz","dlat","el","bl","tanphi","mln","mlnp","ma","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_re1","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_re1","z_n_im1","delta_x","delta_y","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","C_y","C_x","delta_theta","ml2","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","GH","Hs","kp","cos_c","s2","s3","s4","s5","cosAz","Ee","sinpsi","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","face","one_minus_f","one_minus_f_squared","xy","area","sinlon","qsc_shift_lon_origin","qsc_fwd_equat_face_theta","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","slon","COEFS_X","COEFS_Y","FXC","FYC","RC1","NODES","poly3_val","coefs","poly3_der","newton_rapshon","f_df","max_err","iters","upd","azi","degrees","tilt","bind","pn1","rp","pfact","omega","cg","sg","cw","sw","yt","ba","bm","bq","flip_axis","sweep","radius_g_1","radius_g","rone_es","radius_p","radius_p2","radius_p_inv2","shape","v_x","v_y","v_z","det","v_zp","Proj","sterea","stere","somerc","omerc","lcc","krovak","cass","laea","aea","gnom","cea","eqc","poly","nzmg","mill","sinu","moll","eqdc","vandg","aeqd","ortho","qsc","robin","geocent","tpers","geos","common","includedProjections","factory","define","__esModule","default","_isProj4Obj","Class","initialize","bounds","isP4","_proj","_projFromCodeDef","project","latlng","lng","unproject","unbounded","point2","LatLng","urn","includes","options","transformation","Transformation","projection","Util","setOptions","origin","scales","_scales","resolutions","infinite","scale","baseScale","nextScale","scaleDiff","zDiff","iZoom","nextZoom","downScale","_closestElement","downZoom","distance","Earth","element","low","GeoJSON","geojson","_callLevel","call","addData","properties","coordsToLatLng","geoJson","ImageOverlay","url","_projectedBounds","_animateZoom","event","_map","getZoomScale","northWest","_projectedToNewLayerPoint","DomUtil","setTransform","_image","_reset","getZoom","pixelOrigin","getPixelOrigin","_transform","_subtract","size","getSize","setPosition","style","width","height","viewHalf","_divideBy","newTopLeft","_round","topLeft","_getMapPanePos","imageOverlay","require","bdImgOnline","timeOnline","Date","getTime","localMapUrl","res","option","subdomains","tms","bigfont","customid","layerGroup"],"sourceRoot":""}