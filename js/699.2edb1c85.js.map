{"version":3,"file":"js/699.2edb1c85.js","mappings":"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","sources":["webpack://vuetools/./src/views/cesiumUse/cesiumUse.vue","webpack://vuetools/src/views/cesiumUse/cesiumUse.vue","webpack://vuetools/./src/views/cesiumUse/cesiumUse.vue?8d56","webpack://vuetools/./src/views/cesiumUse/cesiumUse.vue?8a9e"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"cesiumComp\"}})\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"cesiumComp\"></div>\n</template>\n\n<script>\nexport default {\n  name: \"cesiumComp\",\n  components: {},\n  props: {},\n  data() {\n    return {\n      viewer: null,\n      Cesium: null,\n    };\n  },\n  methods: {\n    /**\n     * @Event 方法\n     * @description: 初始化模型\n     * */\n    initNewModel() {\n      const Cesium = window.Cesium;\n      this.Cesium = Cesium;\n      Cesium.Ion.defaultAccessToken =\n        \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI5NzgzOTIzYi0xZGM2LTQ0YjAtOTQ5OC1iMzgwMzE0NDU1NjEiLCJpZCI6NjQxNjEsImlhdCI6MTYzMTkyOTQxN30.ujwg4v68wp_-h9k1NNpAc4UMK9uWQPd0iKQ39m-5kKA\";\n      var viewer = new Cesium.Viewer(\"cesiumComp\", {\n        infoBox: false,\n        selectionIndicator: false,\n        shadows: true,\n        shouldAnimate: true,\n\n        // maximumZoomDistance: 100, // 设置相机能够缩放的最大距离\n        // minimumZoomDistance: 10  // 设置相机能够缩放的最小距离\n      });\n      //viewer.terrainProvider=Cesium.createWorldTerrain();\n\n      this.viewer = viewer;\n      viewer.entities.removeAll();\n      /* 第一个模型的数据 */\n      var position = Cesium.Cartesian3.fromDegrees(116.350294, 28.417213, 0.0);\n      var heading = Cesium.Math.toRadians(90); // 将度数转换为弧度。\n      var pitch = 0;\n      var roll = 0;\n      var hpr = new Cesium.HeadingPitchRoll(heading, pitch, roll);\n      var orientation = Cesium.Transforms.headingPitchRollQuaternion(\n        position,\n        hpr\n      );\n      /* 第一个模型的数据 */\n      this.addModel(viewer, {\n        id: 1,\n        name: \"model3d/Cesium_Air.glb\",\n        position: position,\n        orientation: orientation,\n        model: {\n          uri: \"models/bridge.glb\",\n          minimumPixelSize: 50,\n          maximumScale: 2000,\n        },\n      }); // 添加第一个模型\n\n      /* 第二个模型的数据 */\n      var positionMeAdd = Cesium.Cartesian3.fromDegrees(\n        121.528981,\n        25.021947,\n        0.0\n      );\n      var headingMeAdd = Cesium.Math.toRadians(135);\n      var pitchMeAdd = 0;\n      var rollMeAdd = 0;\n      var hprMeAdd = new Cesium.HeadingPitchRoll(\n        headingMeAdd,\n        pitchMeAdd,\n        rollMeAdd\n      );\n      var orientationMeAdd = Cesium.Transforms.headingPitchRollQuaternion(\n        positionMeAdd,\n        hprMeAdd\n      );\n      /* 第二个模型的数据 */\n      this.addModel(viewer, {\n        id: 2,\n        name: \"model3d/Wood_Tower.glb\",\n        position: positionMeAdd,\n        orientation: orientationMeAdd,\n        model: {\n          uri: \"models/beauty.glb\",\n          minimumPixelSize: 500,\n          maximumScale: 20000,\n        },\n      }); // 添加第二个模型\n      const handler = new Cesium.ScreenSpaceEventHandler(viewer.scene.canvas);\n\n      handler.setInputAction((movement) => {\n        const pick = viewer.scene.pick(movement.position);\n        // Cesium.defined(pick) ===> 判断是否在模型上点击； pick.id.id ===> 创建模型时，自定义的id\n        if (Cesium.defined(pick)) {\n          // console.log(`你点击了模型${pick.id.id}`, pick)\n          if (pick.id.id === 1) {\n            let entity = viewer.entities.getById(pick.id.id);\n            // 存储上一次高亮的模型\n            let lastHighlightedEntity = viewer.entities._lastHighlighted;\n            // 取消上一次高亮的模型的高亮状态\n            if (\n              lastHighlightedEntity !== undefined &&\n              lastHighlightedEntity !== entity\n            ) {\n              lastHighlightedEntity.model.color = Cesium.Color.WHITE;\n            }\n            // 高亮当前模型\n            // entity.model.color = Cesium.Color.YELLOW; // 设置整个模型颜色\n            entity.model.silhouetteColor = new Cesium.Color(0.5, 0.9, 1.0, 1.0); // 设置边框颜色\n            entity.model.silhouetteSize = 2.0; // 设置边框大小\n            // entity.position=Cesium.Cartesian3.fromDegrees(121, 30, 100.0); // 使模型移动位置\n            //entity.show=false; // 使模型消失\n            // 存储当前高亮的模型\n            viewer.entities._lastHighlighted = entity;\n\n            viewer.camera.flyTo({\n              destination: Cesium.Cartesian3.fromDegrees(\n                116.352859,\n                28.400755,\n                1500.0\n              ), // 摄像机在WGS84（世界）坐标中的最终位置或从上向下视图中可见的矩形。（参数：经度，纬度，高度）\n              duration: 3, // 飞行持续时间（以秒为单位）。如果省略，Cesium会尝试根据航班飞行的距离来计算理想持续时间。\n              orientation: {\n                heading: Cesium.Math.toRadians(357.7),\n                pitch: Cesium.Math.toRadians(-44.32),\n                roll: Cesium.Math.toRadians(0),\n              },\n            });\n          } else if (pick.id.id === 2) {\n            this.$message.success(\"点击了模型2\");\n          }\n        } else {\n          /* 在非模型的地方点击 */\n          let lastHighlightedEntity = viewer.entities._lastHighlighted;\n          if (lastHighlightedEntity !== undefined) {\n            // lastHighlightedEntity.model.color = Cesium.Color.WHITE;\n            lastHighlightedEntity.model.silhouetteSize = 0;\n          }\n          // 清空当前高亮的模型\n          viewer.entities._lastHighlighted = undefined;\n        }\n        this.getClickPosition(viewer, movement, Cesium);\n      }, Cesium.ScreenSpaceEventType.LEFT_CLICK); // 此枚举类型用于对鼠标事件进行分类:向下、向上、单击、双击、移动和按住按钮时移动。\n      viewer.cesiumWidget.creditContainer.style.display = \"none\";\n      viewer.animation.container.style.display = \"none\"; //隐藏动画控件\n      viewer.timeline.container.style.display = \"none\"; //隐藏时间线控件\n      viewer.baseLayerPicker.container.style.display = \"none\";\n\n      window.cMap = viewer;\n    },\n\n    addModel(viewer, item) {\n      // console.log(item, \"item\");\n      viewer.entities.add(item);\n    },\n\n    /**\n     * @Event 方法\n     * @description: 初始化飞行到点位\n     * */\n    initFlyTo() {\n      // 获取目标点位的位置\n      const targetPosition = this.Cesium.Cartesian3.fromDegrees(\n        116.345859,\n        28.408755,\n        1000.0\n      );\n\n      // 飞行到目标点位\n      this.viewer.camera.flyTo({\n        destination: targetPosition,\n        duration: 5, // 飞行时间\n        easingFunction: this.Cesium.EasingFunction.LINEAR_NONE,\n        orientation: {\n          heading: this.Cesium.Math.toRadians(57.7), // 获取相机的弧度方向\n          pitch: this.Cesium.Math.toRadians(-44.32), // 获取相机的弧度（弧度）\n          roll: this.Cesium.Math.toRadians(10), // 获取相机弧度角\n        },\n      });\n    },\n\n    /**\n     * @Event 方法\n     * @description: 添加单个自定义标注\n     * */\n    demoAddMarker() {\n      var position = window.Cesium.Cartesian3.fromDegrees(\n        116.3521143506911,\n        28.41512780799344,\n        20\n      );\n      // var point = new window.Cesium.Entity({\n      //   position : position,\n      //   point : {\n      //     pixelSize : 10,\n      //     color : window.Cesium.Color.RED\n      //   },\n      // });\n      //   116.35209757163713   28.411944298207903\n      // this.viewer.entities.add(point); // 添加点位\n\n      var billboard = new window.Cesium.Entity({\n        position: position,\n        billboard: {\n          image: require(\"/public/img/mapPoint/ewwyBlue.png\"),\n          scale: 0.5,\n          width: 56,\n          height: 175,\n        },\n      });\n\n      this.viewer.entities.add(billboard); // 添加自定义图片\n    },\n\n    /**\n     * @Event 方法\n     * @description: 添加多个自定义标注\n     * */\n    demoAddMarkerMany() {\n      var positions = [\n        window.Cesium.Cartesian3.fromDegrees(\n          116.3521143506911,\n          28.41512780799344,\n          20\n        ),\n        window.Cesium.Cartesian3.fromDegrees(\n          116.30209757163713,\n          28.411944298207903,\n          20\n        ),\n        window.Cesium.Cartesian3.fromDegrees(\n          116.38209757163713,\n          28.411944298207903,\n          20\n        ),\n        // 添加更多的点位\n      ];\n\n      var markers = positions.map((position) => {\n        return new window.Cesium.Entity({\n          position: position,\n          billboard: {\n            image: require(\"/public/img/mapPoint/ewwyBlue.png\"),\n            scale: 0.5,\n            width: 56,\n            height: 175,\n          },\n        });\n      });\n\n      markers.forEach((mark) => {\n        this.viewer.entities.add(mark); // 添加自定义图片\n      });\n    },\n\n    /**\n     * @Event 方法\n     * @description: 获取点击的坐标\n     * */\n    getClickPosition(viewer, movement, Cesium) {\n      var cartesian = viewer.camera.pickEllipsoid(\n        movement.position,\n        viewer.scene.globe.ellipsoid\n      );\n      console.log(cartesian, \"cartesian\");\n      if (cartesian) {\n        var cartographic = Cesium.Cartographic.fromCartesian(cartesian);\n        var longitude = Cesium.Math.toDegrees(cartographic.longitude);\n        var latitude = Cesium.Math.toDegrees(cartographic.latitude);\n        var height = viewer.scene.globe.getHeight(cartographic);\n        console.log(\n          \"经度: \" + longitude + \"，纬度: \" + latitude + \"，高度: \" + height\n        );\n      }\n    },\n  },\n  created() {},\n  mounted() {\n    this.initNewModel();\n    this.demoAddMarkerMany();\n    this.initFlyTo();\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n#cesiumComp {\n  height: 100%;\n  width: 100%;\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./cesiumUse.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./cesiumUse.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./cesiumUse.vue?vue&type=template&id=4434b21c&scoped=true&\"\nimport script from \"./cesiumUse.vue?vue&type=script&lang=js&\"\nexport * from \"./cesiumUse.vue?vue&type=script&lang=js&\"\nimport style0 from \"./cesiumUse.vue?vue&type=style&index=0&id=4434b21c&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4434b21c\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","attrs","staticRenderFns","name","components","props","data","viewer","Cesium","methods","initNewModel","window","Ion","defaultAccessToken","Viewer","infoBox","selectionIndicator","shadows","shouldAnimate","entities","removeAll","position","Cartesian3","fromDegrees","heading","Math","toRadians","pitch","roll","hpr","HeadingPitchRoll","orientation","Transforms","headingPitchRollQuaternion","addModel","id","model","uri","minimumPixelSize","maximumScale","positionMeAdd","headingMeAdd","pitchMeAdd","rollMeAdd","hprMeAdd","orientationMeAdd","handler","ScreenSpaceEventHandler","scene","canvas","setInputAction","movement","pick","defined","entity","getById","lastHighlightedEntity","_lastHighlighted","undefined","color","Color","WHITE","silhouetteColor","silhouetteSize","camera","flyTo","destination","duration","$message","success","getClickPosition","ScreenSpaceEventType","LEFT_CLICK","cesiumWidget","creditContainer","style","display","animation","container","timeline","baseLayerPicker","cMap","item","add","initFlyTo","targetPosition","easingFunction","EasingFunction","LINEAR_NONE","demoAddMarker","billboard","Entity","image","require","scale","width","height","demoAddMarkerMany","positions","markers","map","forEach","mark","cartesian","pickEllipsoid","globe","ellipsoid","console","log","cartographic","Cartographic","fromCartesian","longitude","toDegrees","latitude","getHeight","created","mounted","component"],"sourceRoot":""}