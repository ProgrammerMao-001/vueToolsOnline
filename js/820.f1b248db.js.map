{"version":3,"file":"js/820.f1b248db.js","mappings":"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","sources":["webpack://vuetools/./src/views/elTreeUse/elTreeUse.vue","webpack://vuetools/./src/views/elTreeUse/useTreeDialog.vue","webpack://vuetools/./src/utils/arrayToTree.js","webpack://vuetools/src/views/elTreeUse/useTreeDialog.vue","webpack://vuetools/./src/views/elTreeUse/useTreeDialog.vue?b1d2","webpack://vuetools/./src/views/elTreeUse/useTreeDialog.vue?bb08","webpack://vuetools/src/views/elTreeUse/elTreeUse.vue","webpack://vuetools/./src/views/elTreeUse/elTreeUse.vue?6fe2","webpack://vuetools/./src/views/elTreeUse/elTreeUse.vue?7116","webpack://vuetools/./src/utils/request.js","webpack://vuetools/./src/api/allRequset.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('backHomeBtn',[[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.showTreeDialog()}}},[_vm._v(\" show Dialog \")]),_c('el-input',{staticStyle:{\"width\":\"80%\"},attrs:{\"placeholder\":\"\"},model:{value:(_vm.receiveData),callback:function ($$v) {_vm.receiveData=$$v},expression:\"receiveData\"}}),_c('useTreeDialog',{ref:\"useTreeDialog\",on:{\"on-response\":_vm.getDialogData}})]],2),_c('hr'),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.showTree = !_vm.showTree}}},[_vm._v(\" showTree \")]),_c('transition',{attrs:{\"name\":\"fade-transform\"}},[(_vm.showTree)?_c('div',{staticClass:\"treeClass\"},[_c('el-tree',{attrs:{\"data\":_vm.treeData.data,\"props\":{ children: 'children', label: 'nodeName' },\"highlight-current\":\"\"},on:{\"node-click\":_vm.handleNodeClick},scopedSlots:_vm._u([{key:\"default\",fn:function({ node, data }){return [_c('div',[(data.nodeType === '2')?_c('i',{staticClass:\"el-icon-shopping-cart-1\",staticStyle:{\"color\":\"lightgreen\"}}):_vm._e(),_c('span',[_vm._v(_vm._s(data.nodeName))]),_c('span',[_vm._v(_vm._s(data.nodeOnlineNum)+\"/\"+_vm._s(data.carCount))])])]}}],null,false,1964922447)})],1):_vm._e()])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('el-dialog',{directives:[{name:\"el-drag-dialog\",rawName:\"v-el-drag-dialog\"}],attrs:{\"title\":\"tree\",\"visible\":_vm.dialogVisible,\"width\":\"50%\",\"append-to-body\":false,\"modal-append-to-body\":false,\"before-close\":_vm.closeDialog},on:{\"update:visible\":function($event){_vm.dialogVisible=$event}}},[_c('el-input',{attrs:{\"placeholder\":\"\"},model:{value:(_vm.filterText),callback:function ($$v) {_vm.filterText=$$v},expression:\"filterText\"}}),_c('div',{staticClass:\"tree-box\"},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.changeDefaultExpand(true)}}},[_vm._v(\"展开\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.changeDefaultExpand(false)}}},[_vm._v(\"折叠\")]),_c('el-tree',{ref:\"tree\",attrs:{\"data\":_vm.costomTreeData,\"default-checked-keys\":_vm.defaultCheckedArr,\"default-expanded-keys\":_vm.defaultExpandedArr,\"default-expand-all\":_vm.defaultExpand,\"props\":_vm.defaultProps,\"show-checkbox\":\"\",\"node-key\":\"id\",\"check-strictly\":true,\"filter-node-method\":_vm.filterNode},on:{\"check\":_vm.handleCheck}})],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":_vm.closeDialog}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.submitDialog}},[_vm._v(\"确 定\")])],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * @Event 方法\n * @description: 数组转树结构\n * */\nfunction sortArr(a, b) {\n  return a.orderNum - b.orderNum;\n}\n\nexport function arrayToTree(\n  list,\n  callback = () => {},\n  props = { id: \"id\", pid: \"pid\", children: \"children\" }\n) {\n  list.sort(sortArr);\n  const tree = [];\n  const map = {};\n\n  // list = cloneObj(list);\n\n  const listLength = list.length;\n  for (let i = 0; i < listLength; i++) {\n    const node = list[i];\n    const nodeId = node[props.id];\n    map[nodeId] = node;\n    callback(node);\n  }\n\n  for (let i = 0; i < listLength; i++) {\n    const node = list[i];\n    const nodePid = node[props.pid];\n    const parentNode = map[nodePid];\n    if (parentNode) {\n      parentNode[props.children] = parentNode[props.children] || [];\n      parentNode[props.children].push(node);\n    } else {\n      tree.push(node);\n    }\n  }\n\n  return tree;\n}\n\n// 遍历树结构\nexport function ergodicTree(\n  tree,\n  callback = () => {},\n  props = { id: \"id\", pid: \"pid\", children: \"children\" }\n) {\n  function _ergodicTree(tree, parentIdPath, depth = 0, parentIndex) {\n    const treeLength = tree.length;\n    for (let i = 0; i < treeLength; i++) {\n      const node = tree[i];\n      const _idPath = parentIdPath\n        ? [...parentIdPath, node[props.id]]\n        : [node[props.id]];\n      const _depth = depth + 1;\n      const _index = parentIndex ? [...parentIndex, i] : [i];\n      node._idPath = _idPath;\n      node._depth = _depth;\n      node._index = _index;\n      callback(node);\n      if (node[props.children] && node[props.children] instanceof Array) {\n        _ergodicTree(node[props.children], _idPath, _depth, _index);\n      }\n    }\n    return tree;\n  }\n\n  _ergodicTree(tree);\n  return tree;\n}\n\n//获取所有子孙节点 arr为list结构\nexport function sonsTree(arr, id) {\n  const temp = [],\n    lev = 0;\n  const forFn = function (arr, id, lev) {\n    for (let i = 0; i < arr.length; i++) {\n      const item = arr[i];\n      if (item.pid == id) {\n        item.lev = lev;\n        temp.push(item);\n        forFn(arr, item.id, lev + 1);\n      }\n    }\n  };\n  forFn(arr, id, lev);\n  return temp;\n}\n\n// 获取所有父节点\nexport function getParent(data2, nodeId2) {\n  let arrRes = [];\n  if (data2.length == 0) {\n    if (nodeId2) {\n      arrRes.unshift(data2);\n    }\n    return arrRes;\n  }\n  const rev = (data, nodeId) => {\n    for (let i = 0, length = data.length; i < length; i++) {\n      const node = data[i];\n      if (node.id == nodeId) {\n        arrRes.unshift(node);\n        rev(data2, node.pid);\n        break;\n      } else {\n        if (node.children) {\n          rev(node.children, nodeId);\n        }\n      }\n    }\n    return arrRes;\n  };\n  arrRes = rev(data2, nodeId2);\n  const result = [];\n  arrRes.forEach((a) => {\n    result.push(a.id);\n  });\n  return result;\n}\n","<!--\n * @Description: el-tree 页面\n * @Author: mhf\n * @Date: 2023-04-12 23:18:08\n-->\n<template>\n  <el-dialog\n    title=\"tree\"\n    :visible.sync=\"dialogVisible\"\n    width=\"50%\"\n    :append-to-body=\"false\"\n    :modal-append-to-body=\"false\"\n    :before-close=\"closeDialog\"\n    v-el-drag-dialog\n  >\n    <el-input placeholder=\"\" v-model=\"filterText\"> </el-input>\n    <div class=\"tree-box\">\n      <el-button type=\"primary\" @click=\"changeDefaultExpand(true)\"\n        >展开</el-button\n      >\n      <el-button type=\"primary\" @click=\"changeDefaultExpand(false)\"\n        >折叠</el-button\n      >\n      <!-- default-expanded-keys：默认展开.\n       default-checked-keys：默认选中\n       default-expand-all：是否默认展开所有节点\n       filter-node-method：对节点进行过滤\n        -->\n      <el-tree\n        ref=\"tree\"\n        :data=\"costomTreeData\"\n        :default-checked-keys=\"defaultCheckedArr\"\n        :default-expanded-keys=\"defaultExpandedArr\"\n        :default-expand-all=\"defaultExpand\"\n        :props=\"defaultProps\"\n        show-checkbox\n        node-key=\"id\"\n        :check-strictly=\"true\"\n        :filter-node-method=\"filterNode\"\n        @check=\"handleCheck\"\n      />\n    </div>\n    <span slot=\"footer\" class=\"dialog-footer\">\n      <el-button @click=\"closeDialog\">取 消</el-button>\n      <el-button type=\"primary\" @click=\"submitDialog\">确 定</el-button>\n    </span>\n  </el-dialog>\n</template>\n\n<script>\nimport { getTreeData } from \"@/api/allRequset\";\nimport { arrayToTree } from \"@/utils/arrayToTree\";\n\nexport default {\n  name: \"useTreeDialog\",\n  watch: {\n    /* 通过关键字过滤树节点 */\n    filterText(val) {\n      this.$refs.tree.filter(val);\n    },\n  },\n  data() {\n    return {\n      filterText: \"\",\n      dialogVisible: false,\n      costomTreeData: [],\n      // 树的props\n      defaultProps: {\n        children: \"children\",\n        label: \"name\",\n      },\n      defaultCheckedArr: [], // 树节点的默认选中 --- 回显数据格式为：id字符串数组  ['628e9ff1a4f34ae1b21415a2361302fd', 'cec483e51de3458abfd5fd9f95126e09']\n      defaultExpandedArr: [], // 树节点的默认展开\n      defaultExpand: false, // 是否默认展开所有节点\n      passData: [],\n    };\n  },\n  methods: {\n    showDialog(data) {\n      if (data !== []) {\n        /* 回显 */\n        data.forEach((item) => {\n          this.defaultCheckedArr.push(item.id);\n          setTimeout(() => {\n            this.defaultExpandedArr.push(item.id);\n          }, 100);\n        });\n      }\n      this.getTreeData();\n      this.dialogVisible = true;\n    },\n    getTreeData() {\n      getTreeData().then((res) => {\n        this.costomTreeData = arrayToTree(res.data.data);\n      });\n    },\n\n    closeDialog() {\n      this.dialogVisible = false;\n      // this.defaultExpand = false;\n      this.$refs.tree.setCheckedKeys([]); // 清空选项\n      this.defaultCheckedArr = [];\n      this.defaultExpandedArr = [];\n      this.filterText = \"\";\n    },\n\n    /**\n     * @Event 方法\n     * @description: 设置 默认展开/折叠\n     * */\n    changeDefaultExpand(boolean) {\n      this.defaultExpand = boolean;\n      for (var i = 0; i < this.$refs.tree.store._getAllNodes().length; i++) {\n        this.$refs.tree.store._getAllNodes()[i].expanded = this.defaultExpand;\n      }\n    },\n\n    submitDialog() {\n      this.passData = this.$refs.tree.getCheckedNodes(); //获取选中节点\n      this.$emit(\"on-response\", this.passData);\n      this.closeDialog();\n    },\n\n    /**\n     * @Event 方法\n     * @description: 通过关键字过滤树节点\n     * */\n    filterNode(value, data) {\n      if (!value) return true;\n      return data.name.indexOf(value) !== -1;\n    },\n\n    /**\n     * @Event 方法\n     * @description: 设置只能选中一个节点内容\n     * */\n    handleCheck(data, checked) {\n      // console.log(data, checked)\n      if (checked.checkedKeys.length > 0) {\n        this.defaultCheckedArr = [];\n        this.$refs.tree.setCheckedKeys([]); // 清空所有选中的节点\n        this.defaultCheckedArr.push(data.id); // 树节点的默认选中\n      }\n    },\n  },\n  mounted() {},\n  created() {},\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.tree-box {\n  height: 380px;\n  overflow: auto;\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./useTreeDialog.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./useTreeDialog.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./useTreeDialog.vue?vue&type=template&id=61a6427a&scoped=true&\"\nimport script from \"./useTreeDialog.vue?vue&type=script&lang=js&\"\nexport * from \"./useTreeDialog.vue?vue&type=script&lang=js&\"\nimport style0 from \"./useTreeDialog.vue?vue&type=style&index=0&id=61a6427a&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"61a6427a\",\n  null\n  \n)\n\nexport default component.exports","<!--\n * @Description: el-tree单选且实现数据回显\n * @Author: mhf\n * @Date: 2023-04-07 01:30:40\n-->\n<template>\n  <div>\n    <backHomeBtn>\n      <template>\n        <el-button type=\"primary\" @click=\"showTreeDialog()\">\n          show Dialog\n        </el-button>\n        <el-input\n          style=\"width: 80%\"\n          v-model=\"receiveData\"\n          placeholder=\"\"\n        ></el-input>\n        <useTreeDialog\n          ref=\"useTreeDialog\"\n          @on-response=\"getDialogData\"\n        ></useTreeDialog>\n      </template>\n    </backHomeBtn>\n\n    <hr />\n\n    <el-button type=\"primary\" @click=\"showTree = !showTree\">\n      showTree\n    </el-button>\n    <transition name=\"fade-transform\">\n      <div class=\"treeClass\" v-if=\"showTree\">\n        <el-tree\n          :data=\"treeData.data\"\n          :props=\"{ children: 'children', label: 'nodeName' }\"\n          highlight-current\n          @node-click=\"handleNodeClick\"\n        >\n          <template slot-scope=\"{ node, data }\">\n            <div>\n              <i\n                style=\"color: lightgreen\"\n                v-if=\"data.nodeType === '2'\"\n                class=\"el-icon-shopping-cart-1\"\n              ></i>\n              <span>{{ data.nodeName }}</span>\n              <span>{{ data.nodeOnlineNum }}/{{ data.carCount }}</span>\n            </div>\n          </template>\n        </el-tree>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\nimport useTreeDialog from \"@/views/elTreeUse/useTreeDialog\";\nexport default {\n  name: \"elTreeUse\",\n  components: { useTreeDialog },\n  props: {},\n  data() {\n    return {\n      receiveData: \"\",\n      huiXianData: [], // 传给dialog的用以回显的数据，id字符串数组\n      treeData: require(\"./treeData.json\"),\n      showTree: false,\n    };\n  },\n  methods: {\n    /**\n     * @Event 方法\n     * @description: 打开树的弹窗\n     * */\n    showTreeDialog() {\n      const useTreeDialog = \"useTreeDialog\";\n      const useTreeDialogComponent = this.$refs[useTreeDialog];\n      useTreeDialogComponent.showDialog(this.huiXianData);\n    },\n\n    /**\n     * @Event 方法\n     * @description: 获取树的数据\n     * */\n    getDialogData(data) {\n      this.huiXianData = data;\n      let strArr = [];\n      if (data !== []) {\n        data.forEach((item) => {\n          strArr.push(item.name);\n        });\n        this.receiveData = strArr.toString();\n      }\n    },\n\n    handleNodeClick(data) {\n      console.log(data);\n    },\n  },\n  created() {},\n  mounted() {},\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.treeClass {\n  width: 50%;\n  height: 500px;\n  border: 2px solid red;\n  margin: 50px;\n  padding: 20px;\n  overflow-y: auto;\n}\n\n/* fade-transform */\n.fade-transform-leave-active,\n.fade-transform-enter-active {\n  transition: all 0.5s;\n}\n\n.fade-transform-enter {\n  opacity: 0;\n  transform: translateX(-30px);\n}\n\n.fade-transform-leave-to {\n  opacity: 0;\n  transform: translateX(30px);\n}\n\n::v-deep\n  .el-tree--highlight-current\n  .el-tree-node.is-current\n  > .el-tree-node__content,\n::v-deep .el-tree-node__content:hover,\n.el-upload-list__item:hover {\n  background-color: #c2e4ff;\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./elTreeUse.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./elTreeUse.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./elTreeUse.vue?vue&type=template&id=76c9522e&scoped=true&\"\nimport script from \"./elTreeUse.vue?vue&type=script&lang=js&\"\nexport * from \"./elTreeUse.vue?vue&type=script&lang=js&\"\nimport style0 from \"./elTreeUse.vue?vue&type=style&index=0&id=76c9522e&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"76c9522e\",\n  null\n  \n)\n\nexport default component.exports","// axios数据请求封装\nimport axios from \"axios\";\n// 创建一个实例\nconst server = axios.create({\n  timeout: 5000,\n});\n// const baseUrl = \"https://www.fastmock.site/mock/c25e396c1d2ef07e8f1fc0acf0adc1a5/vue-helper\"\naxios.defaults.headers[\"Content-Type\"] = \"application/json;charset=utf-8\";\n// 请求前\nserver.interceptors.request.use((config) => config);\n// 请求前错误\nserver.interceptors.request.eject((config) => config);\n// 请求成功后\nserver.interceptors.response.use((config) => config);\n// 请求后失败\nserver.interceptors.response.eject((config) => config);\n\n// const RequestServer = {\n//   test: () => {\n//     return server.get(baseUrl + \"/side-bar\");\n//   }\n// }\n\nexport default server;\n","/**\n * @Interface 接口\n * @description: 存放 fastmock 网站上所有的数据请求\n * */\n\nimport request from \"@/utils/request\";\n\nconst helperUrl =\n  \"https://www.fastmock.site/mock/c25e396c1d2ef07e8f1fc0acf0adc1a5/vue-helper\";\nconst toolsUrl =\n  \"https://www.fastmock.site/mock/f10cad4615c38b76aa9ee7e5030157e5/vue-tools\";\n\n/*               富 文 本 框 页 面 的 接 口               */\n\n// 云南的 /examAnswer/safetyCommitment 安全承诺里面的富文本框的案例\nexport function safetyCommitmentConfig() {\n  return request({\n    url: helperUrl + \"/api/facility-base/safety-commitment-config\",\n    method: \"get\",\n  });\n}\n\n// 富文本框 详情\nexport const richTextDetail = (id) => {\n  return request({\n    url: helperUrl + \"/api/facility-base/safety-commitment-config/\" + id,\n    method: \"get\",\n  });\n};\n\n/*               富 文 本 框 页 面 的 接 口               */\n\n/*               el-tree 树 使 用 页 面 的 接 口               */\nexport function getTreeData() {\n  return request({\n    url: helperUrl + \"/api/hazardClassify/tree\",\n    method: \"get\",\n  });\n}\n\n/*               el-tree 树 使 用 页 面 的 接 口               */\n\n/*               页 面 导 出 成 jpg 页 面 的 接 口               */\nexport function exportPdf() {\n  return request({\n    url: helperUrl + \"/api/exportPdf\",\n    method: \"get\",\n  });\n}\n\n/*               页 面 导 出 成 jpg 页 面 的 接 口               */\n\n/*               前 端 实 现 表 格 分 页 的 接 口               */\nexport function mockTable() {\n  return request({\n    url: helperUrl + \"/mockTable\",\n    method: \"get\",\n  });\n}\n/*               前 端 实 现 表 格 分 页 的 接 口               */\n\n/*               高 德 地 图 获 取 天 气 的 接 口               */\nexport function gaoDeWeather(city) {\n  return request({\n    url: \"https://restapi.amap.com/v3/weather/weatherInfo\",\n    method: \"get\",\n    params: {\n      key: \"e3d4cbac03e5c2a465ab04b682ca005f\", // 请求服务权限标识\n      city: city, // 城市编码\n      extensions: null, // 气象类型 可选值：base/all。base:返回实况天气，all:返回预报天气\n      output: null, // 返回格式 (可选值：JSON,XML)\n    },\n  });\n}\n/*               高 德 地 图 获 取 天 气 的 接 口               */\n\nexport function getAreaCount() {\n  return request({\n    url: toolsUrl + \"/getAreaCount\",\n    method: \"get\",\n  });\n}\n"],"names":["render","_vm","this","_c","_self","attrs","on","$event","showTreeDialog","_v","staticStyle","model","value","receiveData","callback","$$v","expression","ref","getDialogData","showTree","staticClass","treeData","data","children","label","handleNodeClick","scopedSlots","_u","key","fn","node","nodeType","_e","_s","nodeName","nodeOnlineNum","carCount","staticRenderFns","directives","name","rawName","dialogVisible","closeDialog","filterText","changeDefaultExpand","costomTreeData","defaultCheckedArr","defaultExpandedArr","defaultExpand","defaultProps","filterNode","handleCheck","slot","submitDialog","sortArr","a","b","orderNum","arrayToTree","list","props","id","pid","sort","tree","map","listLength","length","i","nodeId","nodePid","parentNode","push","watch","val","$refs","filter","passData","methods","showDialog","forEach","item","setTimeout","getTreeData","then","res","setCheckedKeys","boolean","store","_getAllNodes","expanded","getCheckedNodes","$emit","indexOf","checked","checkedKeys","mounted","created","component","components","useTreeDialog","huiXianData","require","useTreeDialogComponent","strArr","toString","console","log","server","axios","timeout","interceptors","request","use","config","eject","response","helperUrl","toolsUrl","safetyCommitmentConfig","url","method","richTextDetail","exportPdf","mockTable","gaoDeWeather","city","params","extensions","output","getAreaCount"],"sourceRoot":""}